{"version":3,"names":["root","factory","this","global","Toastify","options","lib","init","getAxisOffsetAValue","axis","offset","isNaN","containsClass","elem","yourClass","className","trim","split","indexOf","defaults","oldestFirst","text","node","undefined","duration","selector","callback","destination","newWindow","close","gravity","positionLeft","position","backgroundColor","avatar","stopOnFocus","onClick","x","y","escapeMarkup","ariaLive","style","background","prototype","toastify","constructor","toastElement","buildToast","divElement","document","createElement","property","console","warn","setAttribute","nodeType","Node","ELEMENT_NODE","appendChild","innerText","innerHTML","avatarElement","src","insertAdjacentElement","closeElement","type","addEventListener","event","stopPropagation","removeElement","window","clearTimeout","timeOutValue","bind","width","innerWidth","screen","self","setTimeout","open","location","xOffset","yOffset","transform","showToast","rootElement","getElementById","HTMLElement","ShadowRoot","body","elementToInsert","firstChild","lastChild","insertBefore","reposition","hideToast","replace","parentNode","removeChild","call","classUsed","topLeftOffsetSize","top","bottom","topRightOffsetSize","offsetSize","allToasts","getElementsByClassName","i","length","height","offsetHeight","substr","exports","module","RF_GLOBALS","RF_CONFIG","window_state","breakpoint","rf_set_globals","settings","rf_get_globals","key","RfLoader","target","msg","size","loaderClass","loader","log","insertLoader","insertAdjacentHTML","querySelector","removeLoader","remove","reinsertLoader","makeLoader","RfCheckboxStatus","form","checkboxes","checkBoxObj","status","elements","store","validator","get","Array","slice","some","checked","Error","Proxy","getStatus","RfCheckBoxCombo","checkboxGroup","checkboxCombos","from","querySelectorAll","forEach","group","push","parent","getCheckedStatus","setParentCheckbox","combo","el","setChildCheckbox","allChecked","every","someChecked","indeterminate","RfModals","modalOpenHtmlClass","modalOpenClass","html","documentElement","modals","modalOpenBtns","modalAjaxOpenBtns","modalTargetName","openedModals","events","modal","setModalOpenBtns","setModals","on","eventName","emit","data","promises","map","Promise","resolve","all","openModal","modalId","targetModal","dir","classList","add","setModalOpenBtnEvent","btns","Element","btn","dataset","jsModal","e","tagName","preventDefault","closeModal","index","splice","setModalCloseEvent","setModalOpenBtn","modalBtn","setModal","modalObj","modalOpenBtn","rf_modal_madori","modalMadoriContainer","madori_images","modal_id","modal_container_id","hasOwnProperty","rf_modals","image","async","modalHtml","id","createModal","imgSrc","jsMadoriPhoto","loadedImage","imgUrl","reject","Image","onload","onerror","error","rf_toggles","toggles","toggleSelector","toggleTextSelector","toggleClass","toggle","hasAttribute","closest","contains","toggleTarget","jsToggle","toggle_text","getAttribute","textContent","toggleAttrAndText","initToggleControl","jsToggleText","setToggleTextAndClass","rf_top_banners","args","navigation","nextEl","prevEl","breakpoints","slidesPerView","spaceBetween","slidesOffsetAfter","slidesOffsetBefore","Swiper","rf_todays_count","targetElements","fetchContent","response","fetch","ok","htmlElement","DOMParser","parseFromString","JSON","parse","element","jsToday","insertContent","err","errorHandler","rf_prop_slider","propSliders","sliders","pagination","slider","propSlider","RFBuildroomSlide","swipers","mainSlide","thumbSlide","modalMainSlide","modalThumbSlide","photos","build","floorplan","exterior","panorama","photoHTML","tabBtnTexts","ja","en","currentSlide","isFloorData","isPhotosLoaded","swiperMainSetting","zoom","swiperThumbsSetting","freeMode","swiperModalThumbsSetting","errorMessages","nodata","mainSlideParent","mainSlideContainer","mainSlideElm","slideWrapper","thumbSlideContainer","thumbElm","thumbWrapper","modalSlideWindow","modalSlideElm","modalSlideWrapper","modalThumbElm","modalThumbWrapper","btnOpenModalHTML","btnOpenModal","btnOpenPanoramaHTML","btnOpenPanorama","mainSlideTabContainer","mainSlideTabs","setNodata","imgHTML","RF_gallery_nophoto","setErrorHTML","RF_lang","removeSkeltonLoader","setCurrentSlide","getCurrentSlide","getSlideData","setSlideData","getSlideHTMLData","setSlideHTMLData","removeNoFloorDataProcess","setNoFloorDataProcess","showHideModalBtn","disable","removeErrorDataProcess","setErrorDataProcess","removeAllSlides","is_show","is_panorama","hideCls","setModalSlide","activeIndex","appendSlide","update","slideTo","setSwiperSlide","enable","convertToSwiperHTML","dataArr","photo","panoramaAttr","url","nophoto","RF_page_key","RF_gallery_nofloorplan","filename","imageDecode","img","decode","checkPhotoLoad","counter","errorCounter","min","loaded","elm","checkLoadAndSetSlideHTML","slideHTMLData","photoData","loadError","registeredPhoto","substring","lastIndexOf","defaultNoPhoto","openPanoramaWindow","jsBuildroomPanorama","setPanoramaOpenBtn","setTabBtnEvent","is_loading","jsBuildroomSlideTab","createTabHTML","lang","setTabs","tabHTML","filter","tab","setModalActiveIndex","setModalWindowAction","_modalArgs","setSwiper","thumbs","swiper","swiperModalMainSetting","controller","control","insertInitSlides","setInitPhotos","firstKey","Object","keys","find","sortFirstDataAndSave","part","sortBuildDataAndSave","buildData","sortDataAndSave","savePanoramaData","RF_gallery_panorama","fetchPhotoData","isInitialData","RF_firstbuild_photo","RF_firstfloorplan_photo","fetchedData","RF_gallery_url","json","dataBuild","fetchedBuildData","RF_gellery_tatemono_url","rf_related_prop_slider","relatedPropSliders","onLoaded","relatedPropSlider","rf_ward","dataProp","checkBoxes","boundaries","currentWards","selectedWards","getWards","getCurrentWards","setToggleAction","isAdd","wards","ward","jsWardSelect","includes","removeWard","setWard","dom","differences","isCheckbox","diff","selectedBoundary","bound","selectedCheckbox","checkbox","toggleCheckbox","defaultChecked","rf_result_room_slide","room_slides","disabled_class","flash_msg_class","click_handlers","floorplan_type","swiper_arg","msgs","handleError","err_msg","pic_area","msg_html","msg_inserted","insertFlashMessage","extracted_data","item","extractSlideData","message","setClickAction","jsResultRoomSlide","stringify","target_slide","jsResultRoomId","removeEventListener","name","click","setClickHandler","once","setSlideAction","rf_search_ensen_checkbox","forms","form_ensen_step_one_id","form_ensen_steps_id","checkboxCallback","checker","formId","is_disabled","removeAttribute","toggleBtnClass","checkboxStatus","obj","cb","dispatchEvent","Event","_checkboxes","getCheckboxes","rf_search_area_checkbox","form_search_area_ids","RfMediaQuery","minWidth","query","matchMedia","attachListener","rf_search_change_method","tippyInstance","tippySettingCommon","content","ref","jsSearchMethod","animation","interactive","interactiveBorder","trigger","delay","arrow","tippy","roundArrow","theme","tippySettingSP","placement","tippySettingPC","change_tippy_setting","is_matched","matches","currentTarget","tippySetting","setProps","set_tippy","rf_test","res","RFtemp","requestAnimationFrame","current_state","_isOpen","_isOpenSub","_current","_currentSub","gnavID","openClass","lv1Flag","gnav","gnavBtn","gnavBtnClose","gnavSubContainer","gnavBtnSubContClose","gnavToggles","gnavToggleTargets","jsGnavSub","gnavClose","_hideGnav","_showGnav","targetID","_prev","jsGnavSubClose","rf_gnav","pagetop","prevRenderTime","scrollTo","behavior","toggleVisibility","timestamp","scrollY","link","clicked","jsRoomLink","tempText","jsRoomToggle","scrollHeight","maxHeight","jsRoomToggleText","rf_room_list_toggle","nav","jsCtaNaviTel","rf_cta_navi_tel","href","selectedOptions","value","rf_init"],"sources":["../../node_modules/toastify-js/src/toastify.js","../../src/js/partials/_global-setting.js","../../src/js/partials/_loader.js","../../src/js/partials/_checkbox-status.js","../../src/js/partials/_checkbox-combo.js","../../src/js/partials/_modal.js","../../src/js/partials/_modal-madori.js","../../src/js/partials/_toggles.js","../../src/js/partials/_top-banners.js","../../src/js/partials/_top-today.js","../../src/js/partials/_prop-slider.js","../../src/js/partials/_buildroom.js","../../src/js/partials/_cta-navi.js","../../src/js/partials/_related-prop-slider.js","../../src/js/partials/_ward.js","../../src/js/partials/_result-room-slide.js","../../src/js/partials/_search-enesen.js","../../src/js/partials/_search-area.js","../../src/js/partials/_mediaquery.js","../../src/js/partials/_search-change-method.js","../../src/js/partials/_test.js","../../src/js/rf.js","../../src/js/partials/_responsive.js","../../src/js/partials/_gnav.js","../../src/js/partials/_pagetop.js","../../src/js/partials/_room-list.js","../../src/js/partials/_select-link.js"],"sourcesContent":["/*!\n * Toastify js 1.12.0\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.12.0\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    ariaLive: 'polite',\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.ariaLive = options.ariaLive || Toastify.defaults.ariaLive;\n      this.options.style = options.style || Toastify.defaults.style;\n      if(options.backgroundColor) {\n        this.options.style.background = options.backgroundColor;\n      }\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Announce the toast to screen readers\n      if (this.options.ariaLive) {\n        divElement.setAttribute('aria-live', this.options.ariaLive)\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"button\");\n        closeElement.type = \"button\";\n        closeElement.setAttribute(\"aria-label\", \"Close\");\n        closeElement.className = \"toast-close\";\n        closeElement.innerHTML = \"&#10006;\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n","/**\n * グローバル変数、グローバル設定\n */\nwindow.RF_GLOBALS = {}\nwindow.RF_GLOBALS.RF_CONFIG = {\n  window_state: 'PC',\n  breakpoint: 768,\n}\n\nconst rf_set_globals = settings => {\n  window.RF_GLOBALS.RF_CONFIG = {\n    ...window.RF_GLOBALS.RF_CONFIG,\n    ...settings,\n  }\n}\n\nconst rf_get_globals = key => {\n  return RF_GLOBALS['RF_CONFIG'][key]\n}\n\nexport { rf_set_globals, rf_get_globals, init_rf_globals }","// ローダー\n/**\n * ローダー\n * @param {string} target - ローダーを挿入するターゲット（指定がなければbody）\n * @param {string} msg - ローダーのメッセージ（キャプション） default: 'Loading...' //未使用\n * @param {string} size - ローダーのサイズ（スタイルシートを参照） default: 'md'\n * @param {string} style - ローダーのスタイル（スタイルシートを参照） default: '--bg-black'\n */\nclass RfLoader {\n  #settings = {\n    target: document.body,\n    msg: 'Loading...', //TODO: 未使用\n    size: 'md',\n    style: '--bg-black',\n    loaderClass: 'c-loader',\n    loader: null,\n  }\n  constructor(settings = null) {\n    this.#settings = {...this.#settings, ...settings}\n    console.log(this.#settings)\n    this.#init()\n  }\n\n  // ローダーを挿入（コンストラクタから呼び出し）\n  #insertLoader(loader) {\n    console.log('ローダーを挿入')\n\n    if(typeof loader === 'string') {\n      this.#settings.target.insertAdjacentHTML('beforeend', loader)\n    } else if(typeof loader === 'object') {\n      // 2回目以降はこっち\n      this.#settings.target.insertAdjacentElement('beforeend', loader)\n    }\n    if(!this.#settings.loader) {\n      this.#settings.loader = this.#settings.target.querySelector('.' + this.#settings.loaderClass) //ローダー要素を保管\n    }\n  }\n\n  // ローダーを削除（public）\n  removeLoader() {\n    console.log('ローダーを削除')\n    this.#settings.loader.remove()\n  }\n\n  // ローダーを再挿入（public）\n  reinsertLoader() {\n    console.log('ローダーを再挿入')\n    this.#insertLoader(this.#settings.loader)\n  }\n\n  // ローダーを作成\n  #makeLoader() {\n    console.log('ローダーを作成')\n    let size = ''\n    if (this.#settings.size !== 'md') size = `--${this.#settings.size}`\n    const loader = `<div class=\"${this.#settings.loaderClass} ${this.#settings.style} ${size}\"></div>`\n    this.#insertLoader(loader)\n  }\n\n  #init() {\n    this.#makeLoader()\n  }\n}\n\nexport default RfLoader","/**\n * Checkbox Status - チェックボックスのステータスを確認する\n * constructor\n * @param {HTMLFormElement} form\n * @param {HTMLInputElement[]} checkboxes\n */\nclass RfCheckboxStatus {\n  #form;\n  #checkboxes;\n  #checkBoxObj = {\n    status: null,\n    elements: null\n  };\n  #store;\n\n  #validator = {\n    get(target, key) {\n      console.log(\"target&key: \", target, key);\n      const status = Array.prototype.slice\n        .call(target[\"elements\"])\n        .some((x) => x.checked);\n      console.log(target[\"elements\"]);\n      console.log(status);\n      target[key] = status;\n      return target[key];\n    }\n  };\n\n  constructor(form, checkboxes) {\n    if (!form || !checkboxes) throw new Error(\"No Form selected!\");\n    console.log(\"yes checkboxes!\");\n    this.#form = form;\n    this.#checkboxes = checkboxes;\n    this.#checkBoxObj[\"elements\"] = this.#checkboxes;\n    this.#store = new Proxy(this.#checkBoxObj, this.#validator);\n    // this.#cb = cb\n  }\n\n\n  getStatus() {\n    return this.#store.status;\n  }\n}\n\nexport default RfCheckboxStatus","// コンボ型のチェックボックス制御\n\nclass RfCheckBoxCombo {\n  #form;\n  #checkboxGroup = [];\n  #checkboxCombos = [];\n\n  constructor(form) {\n    this.#form = form\n    this.#checkboxGroup = Array.from(this.#form.querySelectorAll('[data-js-checkboox-combo-group]'))\n    this.#checkboxGroup.forEach(group => {\n      this.#checkboxCombos.push({\n        parent: group.querySelector('[data-js-checkbox-combo-parent]'),\n        elements: Array.from(group.querySelectorAll('[data-js-checkbox-combo-target]'))\n      })\n    })\n    // console.log(this.#checkboxCombos)\n\n    this.#init()\n  }\n\n  // フォーム全体でチェックボックスにチェックが入っているかどうかを確認する\n  getCheckedStatus = () => {\n    const checkedBoxes = this.#form.querySelectorAll('input[type=\"checkbox\"][data-js-checkbox-combo-target]:checked');\n    return checkedBoxes.length > 0;\n  }\n\n  // グループの親チェックボックスの制御\n  setParentCheckbox = () => {\n    this.#checkboxCombos.forEach(combo => {\n      const parent = combo.parent\n      const elements = combo.elements\n      parent.addEventListener('change', () => {\n        console.log(elements)\n        elements.forEach(el => {\n          el.checked = parent.checked\n        })\n      })\n    })\n  }\n\n  // 子チェックボックスの制御\n  setChildCheckbox = () => {\n    this.#checkboxCombos.forEach(combo => {\n      const parent = combo.parent\n      const elements = combo.elements\n      elements.forEach(el => {\n        el.addEventListener('change', () => {\n          // Check if all elements are checked\n          const allChecked = elements.every(el => el.checked)\n          // Check if at least one element is checked\n          const someChecked = elements.some(el => el.checked)\n\n          console.log(el, allChecked, someChecked)\n          \n          if (allChecked) {\n            // If all checkboxes are checked, check the parent\n            parent.checked = true\n            parent.indeterminate = false\n          } else if (someChecked) {\n            // If some (but not all) checkboxes are checked, show indeterminate state\n            parent.checked = false\n            parent.indeterminate = true\n          } else {\n            // If no checkboxes are checked, uncheck the parent\n            parent.checked = false\n            parent.indeterminate = false\n          }\n        })\n      })\n    })\n  }\n\n  #init = () => {\n    this.setParentCheckbox()\n    this.setChildCheckbox()\n  }\n\n}\n\nexport default RfCheckBoxCombo","class RfModals {\n  #modalOpenHtmlClass = '--is-modal-open'\n  #modalOpenClass = '--is-open'\n  #html = document.documentElement\n  #modals\n  #modalOpenBtns\n  #modalAjaxOpenBtns\n  #modalTargetName = 'jsModalTarget'\n  #openedModals = []\n  #events = {}\n\n  /**\n   * Initializes a new instance of the RfModals class.\n   *\n   * @param {Object|null} modals - Optional array of modal elements to be added dynamically.\n   * @example {modal: data-js-modal-target(モーダル本体), modalOpenBtn: data-js-modal(モーダル開くボタン)}\n   * @return {void}\n   */\n  constructor(modals = null) {\n    // このオブジェクトが初期化されていない場合に、ダイナミックに追加されるモーダル要素を追加するのであれば追加。\n    if(modals) {\n      this.modal(modals)\n      return\n    }\n\n    this.#modals = Array.from(document.querySelectorAll('[data-js-modal-target]'))\n    this.#modalOpenBtns = Array.from(document.querySelectorAll('[data-js-modal]'))\n    this.#modalAjaxOpenBtns = Array.from(document.querySelectorAll('[data-js-ajax-modal]'))\n\n    this.#setModalOpenBtns()\n    this.#setModals()\n  }\n\n  // ===\n\n  // イベント登録\n  on(eventName, callback) {\n    if(!this.#events[eventName]) {\n      this.#events[eventName] = []\n    }\n    this.#events[eventName].push(callback)\n  }\n\n  // イベント発動\n  // dataは発動させる時に渡すデータ。最終的にコールバック関数で受け取るためのもので、イベント発動の際に渡すデータ。データはイベントごとに自由に設定する\n  async #emit(eventName, data = null) {\n    if(this.#events[eventName]) {\n      const promises = this.#events[eventName].map(callback => {\n        return Promise.resolve(callback(data))\n      })\n\n      return Promise.all(promises)\n    }\n  }\n\n\n  // ===\n\n  // モーダルを開く\n  openModal(modalId) {\n    const targetModal = document.querySelector(modalId)\n    console.dir(targetModal)\n\n    targetModal.classList.add(this.#modalOpenClass) //モーダルターゲット(本体)にopenクラスを追加\n    this.#html.classList.add(this.#modalOpenHtmlClass) //htmlタグにopenクラスを追加\n    this.#openedModals.push(modalId) //モーダル開くリストに追加\n    console.log('opened modals', this.#openedModals)\n  }\n\n  // 開くボタンにクリックイベントを設定\n  #setModalOpenBtnEvent(btns) {\n    // check if btns is element or nodelist\n    const btnSet = btns instanceof Element ? [btns] : Array.from(btns)\n    btnSet.forEach(btn => {\n      const modalId = btn.dataset.jsModal\n      btn.addEventListener('click', e => {\n        if (btn.tagName === 'A' || btn.tagName === 'BUTTON') {\n          e.preventDefault()\n        }\n\n        this.openModal(modalId)\n      })\n    })\n  }\n\n  // 開くボタンの設定\n  #setModalOpenBtns() {\n    this.#modalOpenBtns.forEach(btn => {\n      this.#setModalOpenBtnEvent(btn)\n    })\n  }\n\n  // ===\n\n  /**\n   * モーダルを閉じる\n   * \n   * @param object modal モーダル要素オブジェクト\n   */\n  async closeModal(modal) {\n    // beforeCloseイベント発動\n    // modalはモーダル要素オブジェクト\n    await this.#emit('beforeClose', modal)\n\n    // console.log('モーダル閉じる, openedModalsは?', openedModals)\n    // console.log(modal.id)\n    // console.log(modal instanceof Element)\n    const index = this.#openedModals.indexOf(modal);\n    this.#openedModals.splice(index, 1);\n    // console.log('モーダル閉じたあと, openedModalsは?', openedModals)\n    console.log('閉じる対象のモーダル: ', modal)\n    modal.classList.remove(this.#modalOpenClass)\n\n    // モーダルが多重に開いている場合、すべてのモーダルが閉じていることをチェックしてHTMLからもクラスを削除する\n    if (this.#openedModals.length === 0) {\n      this.#html.classList.remove(this.#modalOpenHtmlClass)\n    }\n\n    console.log('closing...opened modals', this.#openedModals)\n  }\n\n  // ===\n\n  // モーダルを閉じるイベント設定\n  #setModalCloseEvent(modal) {\n    // モーダル本体クリックで閉じる\n    // (モーダルの何もないところをクリックしたとき閉じる)\n    modal.addEventListener('click', e => {\n      console.log('モーダル本体クリック',this.#modalTargetName, e.target.dataset)\n      if (this.#modalTargetName in e.target.dataset) {\n        console.log('モーダルターゲット(本体)クリックで閉じる', modal)\n        this.closeModal(modal)\n      }\n    })\n\n    // モーダル閉じるボタンの設定\n    // (モーダル本体からモーダル閉じるボタンを探して設定する)\n    const modalCloses = modal.querySelectorAll('[data-js-modal-close]')\n    modalCloses.forEach(close => {\n      close.addEventListener('click', () => {\n        console.log('モーダル閉じるボタンクリック', modal)\n        this.closeModal(modal)\n      })\n    })\n  }\n\n  // モーダル設定(コンストラクタからのみ呼び出し)\n  #setModals() {\n    this.#modals.forEach(modal => {\n      this.#setModalCloseEvent(modal)\n    })\n  }\n\n  // ====================================\n  //インスタンス化している場合のメソッド\n  \n  // モーダル開くボタンのイベント設定\n  setModalOpenBtn(modalBtn) {\n    this.#setModalOpenBtnEvent(modalBtn)\n  }\n\n  // モーダル本体のイベント設定\n  setModal(modal){\n    this.#setModalCloseEvent(modal)\n  }\n\n  // モーダル開くボタンとモーダル本体の設定\n  modal(modalObj) {\n    if('modalOpenBtn' in modalObj) {\n      console.log('モーダル開くボタンセット')\n      this.setModalOpenBtn(modalObj.modalOpenBtn)\n    }\n    if('modal' in modalObj) {\n      console.log('モーダルセット')\n      this.setModal(modalObj.modal)\n    }\n  }\n\n}\n\nexport default RfModals","// 部屋一覧のサムネイルをクリックしたときにモーダルを開く\n// 対象: 検索結果 > 建物一覧、部屋一覧ページなど\nimport EventListenerTracker from './_event-listener-tracker'\n\nconst rf_modal_madori = () => {\n  let modal = null //モーダル本体（初回クリック時に作成）\n  let modalMadoriContainer = null //間取り画像をいれる場所\n  const madori_images = document.querySelectorAll('[data-js-madori-modal]')\n  const modal_id = 'madori-modal'\n  const modal_container_id = 'madori-container'\n\n  // モーダルインスタンスが存在するかどうかをチェックし、なければインスタンス化する \n  if(!RF_GLOBALS.hasOwnProperty('rf_modals')) {\n    console.log('rf_modals not exists')\n    RF_GLOBALS.rf_modals = new RF_GLOBALS.RfModals()\n  } else {\n    console.log('rf_modalsはすでに存在しています')\n  }\n\n\n  // モーダル要素作成とモーダル本体の設定\n  const createModal = () => {\n    const modalHtml = `\n      <div class=\"c-buildroom-modal --madori-modal c-modal\" id=\"${modal_id}\" data-js-modal-target>\n        <button type=\"button\" data-js-buildroom-modal-close data-js-modal-close class=\"c-buildroom-modal__close\"><span class=\"u-visually-hidden\">閉じる</span></button>\n        <div class=\"c-buildroom-modal__container\" id=\"${modal_container_id}\"></div>\n      </div>\n    `\n    document.body.insertAdjacentHTML('beforeend', modalHtml)\n\n    // モーダル設定（閉じる制御を追加）\n    modal = document.querySelector('#' + modal_id)\n    modalMadoriContainer = modal.querySelector('#' + modal_container_id)\n    // 閉じる際にモーダルの中身を空にする\n    RF_GLOBALS.rf_modals.on('beforeClose', modal => {\n      if(modal.id !== modal_id) return\n      console.log('間取りモーダル閉じるイベント')\n      modal.querySelector('#'+ modal_container_id).innerHTML = ''\n    })\n    RF_GLOBALS.rf_modals.modal({\n      modal,\n    })\n  }\n\n  // TODO: 間取り画像の取得・挿入・エラーハンドリング\n  const loadMadoriImage = (imgUrl) => {\n    return new Promise((resolve, reject) => {\n      const image = new Image()\n      \n      image.onload = () => {\n        resolve(image)\n      }\n      \n      image.onerror = () => {\n        console.log('間取り画像の読み込みに失敗しました')\n        // Try loading fallback image\n        image.src = '/assets/img/common/nophoto.webp'\n        resolve(image) // Resolve with fallback image\n      }\n  \n      // 画像をセット\n      image.src = imgUrl\n    })\n  }\n\n  // クリックイベント(モーダル作成、間取り画像をモーダルに挿入、モーダル開く)設置\n  if(madori_images.length > 0) {\n    // const eventTracker = new EventListenerTracker()\n    madori_images.forEach((image) => {\n      image.addEventListener('click', async () => {\n        // e.preventDefault()\n        // const modalId = image.dataset.jsMadoriModal\n\n        // モーダルが有無をチェックして、無ければ作成\n        if(!document.querySelector('.c-buildroom-modal.--madori-modal')) {\n          console.log('間取りモーダルが無いので作成します')\n          createModal()\n        }\n        // 間取り画像をコピーしてモーダルに挿入\n        // const imgClone = image.cloneNode(true)\n        // modalMadoriContainer.insertAdjacentElement('beforeend', imgClone)\n\n        // 念の為、開く前にコンテナを空にする\n        modalMadoriContainer.innerHTML = ''\n\n        // モーダルを開く(先に開いてからローダーや画像挿入を行う)\n        RF_GLOBALS.rf_modals.openModal('#' + modal_id)\n        \n\n        // ローダー\n        const loader = new RF_GLOBALS.RfLoader({\n          target: document.querySelector('#' + modal_container_id),\n          size: 'sm'\n        })\n\n        // 間取り画像を取得して挿入\n        const imgSrc = image.dataset.jsMadoriPhoto\n        if(imgSrc) {\n          try {\n            const loadedImage = await loadMadoriImage(imgSrc)\n            loader.removeLoader()\n            modalMadoriContainer.innerHTML = '' //連続でモーダル開閉すると画像が重複する場合ので空にする\n            modalMadoriContainer.appendChild(loadedImage)\n          } catch (error) {\n            console.error('画像の読み込みエラー:', error)\n            modalMadoriContainer.innerHTML = '' //連続でモーダル開閉すると画像が重複する場合ので空にする\n            loader.removeLoader()\n          }\n        }\n\n      })\n    })\n  }\n\n}\n\nexport default rf_modal_madori","// Toggle 共通\nimport { rf_get_globals } from './_global-setting'\n\n// TODO: AJAXロードされるtoggleもあるので対策する\nconst rf_toggles = () => {\n  const toggles = document.querySelectorAll('[data-js-toggle]')\n  const toggleSelector = 'data-js-toggle'\n  const toggleTextSelector = 'data-js-toggle-text'\n  const html = document.documentElement\n  const toggleSPClass = 'toggle-sp-only'\n  const togglePCClass = 'toggle-pc-only'\n  const toggleClass = '--is-open'\n  // let mutationControl\n  // const mutationConfig = {\n  //   childList: true, //対象ノードの子ノードに対する追加・削除の監視を有効に\n  //   subtree: true, //対象ノードとその子孫ノードに対する変更の監視を有効に\n  //   // attributes: true, //対象ノードの属性に対する変更の監視を有効に\n  //   // characterData: true, //対象ノードのテキストデータの変更の監視を有効に\n  // };\n\n  // =======================================================\n  // テキスト変更のあるトグルの設定\n  const setToggleTextAndClass = toggle => {\n    const toggleTarget = document.querySelector(toggle.dataset.jsToggle)\n\n    //トグルボタンに--is-openがついていればターゲットにも追加\n    if (toggle.classList.contains(toggleClass) && !toggleTarget.classList.contains(toggleClass)) {\n      toggleTarget.classList.add(toggleClass)\n      toggle.setAttribute(toggleTextSelector, toggle.textContent)\n      toggle.textContent = toggle_text\n    }\n\n    // テキスト変更がある場合\n    if (!toggle.hasAttribute(toggleTextSelector)) return\n    let toggle_text\n    toggle_text = toggle.dataset.jsToggleText\n  }\n\n  // =======================================================\n  // ミューテーションオブザーバー\n  // const setToggleText = () => {\n  //   window.addEventListener('load', () => {\n  //     mutationControl = new MutationObserver(mutations => {\n  //       mutations.forEach(mutation => {\n  //         mutation.addedNodes.forEach(node => {\n  //           // 要素はnodeType = 1 https://mzl.la/3yeUhju\n  //           if (node.nodeType !== Node.ELEMENT_NODE) return\n  //           let toggles = []\n  //           if (node.hasAttribute(toggleSelector)) {\n  //             toggles.push(node)\n  //           }\n  //           if (node.querySelector(toggleSelector)) {\n  //             toggles.push(Array.from(node.querySelectorAll(toggleSelector)))\n  //           }\n\n  //           if (!toggles) return\n\n  //           console.log(toggles)\n\n  //           toggles.forEach(toggle => {\n  //             if (!toggle.hasAttribute(toggleTextSelector)) return\n  //             setToggleTextAndClass(toggle)\n  //           })\n\n  //         })\n  //       })\n  //     })\n\n  //     mutationControl.observe(document.documentElement, mutationConfig)\n  //   })\n  // }\n\n  // =======================================================\n  // トグルボタンとターゲットのクラス、属性の変更 テキストの変更もあれば行う\n  const toggleAttrAndText = toggle => {\n    //ターゲットの取得\n    const toggleTarget = document.querySelector(toggle.dataset.jsToggle)\n    \n    // トグルとターゲットのクラス,ARIA属性の切り替え\n    toggle.classList.toggle(toggleClass)\n    toggle.setAttribute('aria-expanded', toggle.classList.contains(toggleClass))\n    if (toggleTarget) {\n      console.log('トグルターゲットのクラスを切り替えます')\n      console.log('toggle target: ', toggleTarget)\n      toggleTarget.classList.toggle(toggleClass)\n      toggleTarget.setAttribute('aria-hidden', !toggle.classList.contains(toggleClass))\n    }\n\n    // トグルボタンのテキスト切り替えあれば変更）\n    if (!toggle.hasAttribute(toggleTextSelector)) return\n    let toggle_text = toggle.getAttribute(toggleTextSelector)\n    toggle.setAttribute(toggleTextSelector, toggle.textContent)\n    toggle.textContent = toggle_text\n  }\n\n  // =======================================================\n  // トグルボタンの初期化\n  const initToggleControl = () => {\n    // AJAX追加されるボタンもあるので、ボタン直接ではなくHTMLクリックに変更\n    html.addEventListener('click', e => {\n      const target = e.target\n      console.dir(target)\n      let toggle\n      if (target.hasAttribute(toggleSelector)) {\n        toggle = target\n      } else if (target.closest(`[${toggleSelector}]`)) {\n        toggle = target.closest(`[${toggleSelector}]`)\n      } else {\n        return\n      }\n      console.log('toggle: ', toggle)\n\n      // テキスト変更 - 分離済み\n\n      // レスポンシブチェック - SPかPCでトグルを制御\n      // SP\n      console.log('現在のモード: ', rf_get_globals('window_state'))\n      if (toggle.classList.contains(toggleSPClass) && rf_get_globals('window_state') !== 'SP') {\n        return\n      }\n      // PC\n      if (toggle.classList.contains(togglePCClass) && rf_get_globals('window_state') !== 'PC') {\n        return\n      }\n\n      // クラス、属性、テキストの変更\n      toggleAttrAndText(toggle)\n\n    })\n\n    // toggles.forEach(toggle => {\n    //   const target = document.querySelector(toggle.dataset.jsToggle)\n    //   let toggle_text\n    //   // テキスト変更がある場合\n    //   if (toggle.hasAttribute('data-js-toggle-text')) {\n    //     toggle_text = toggle.dataset.jsToggleText\n    //   }\n\n    //   // 初動 - トグルボタンに--is-openがついていればターゲットにも追加\n    //   if (toggle.classList.contains(toggleClass) && !target.classList.contains(toggleClass)) {\n    //     target.classList.add(toggleClass)\n    //     toggle.setAttribute('data-js-toggle-text', toggle.textContent)\n    //     toggle.textContent = toggle_text\n    //   }\n\n\n    //   // レスポンシブチェック\n    //   toggle.addEventListener('click', e => {\n    //     // const self = e.target\n    //     // SP\n    //     if (toggle.classList.contains(toggleSPClass) && rf_get_globals('window_state') !== 'SP') {\n    //       return\n    //     }\n    //     // PC\n    //     if (toggle.classList.contains(togglePCClass) && rf_get_globals('window_state') !== 'PC') {\n    //       return\n    //     }\n\n    //     // トグルボタンのテキスト切り替え、クラス切り替え\n    //     if (toggle.hasAttribute('data-js-toggle-text')) {\n    //       toggle_text = toggle.getAttribute('data-js-toggle-text')\n    //       console.log(toggle_text)\n    //       toggle.setAttribute('data-js-toggle-text', toggle.textContent)\n    //       toggle.textContent = toggle_text\n    //     }\n    //     toggle.classList.toggle(toggleClass)\n    //     toggle.setAttribute('aria-expanded', toggle.classList.contains(toggleClass))\n\n    //     // ターゲットのクラス,ARIA属性の切り替え\n    //     target.classList.toggle(toggleClass)\n    //     target.setAttribute('aria-hidden', !toggle.classList.contains(toggleClass))\n    //   })\n    // })\n  }\n\n  const init = () => {\n    initToggleControl()\n    // テキスト変更\n    toggles.forEach(toggle => {\n      setToggleTextAndClass(toggle)\n    })\n\n    //ミューテーションオブザーバー - AJAXで追加されるコンテンツ対策\n    // setToggleText()\n  }\n\n  init()\n\n}\n\nexport default rf_toggles","// TOPバナースライダー\nconst rf_top_banners = () => {\n  let banner = null\n  const args = {\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    breakpoints: {\n      0: {\n        slidesPerView: 1.3,\n        spaceBetween: 16,\n        slidesOffsetAfter: 16,\n        slidesOffsetBefore: 16,\n      },\n      768: {\n        slidesPerView: 4.3,\n        spaceBetween: 24,\n        slidesOffsetAfter: 24,\n        slidesOffsetBefore: 24,\n      },\n    },\n  }\n\n  const setSwiper = () => {\n    let banner = new Swiper('[data-js-top-banners]', args)\n  }\n\n  const init = () => {\n    setSwiper()\n  }\n\n  init()\n\n}\n\nexport default rf_top_banners","const rf_todays_count = () => {\n  // TODO: 英語版対応\n  const fetchURL = '/rf/today'\n  const target = document.querySelector('[data-js-today-target]')\n  // const elementClass = '.c-top-search__prop-status-list'\n  const dataID = '#todays-data'\n  const targetElements = target.querySelectorAll('[data-js-today]')\n  // TODO: 英語版対応\n  const errorMsg = '件数取得エラーが発生しました'\n  // const loader = target.querySelector('[data-js-loader]')\n\n  // エラーハンドリング\n  const errorHandler = err => {\n    console.error(err)\n    target.insertAdjacentHTML('beforeend', `<p class=\"u-color-alert u-fz-14 u-ta-center\">${errorMsg}</p>`)\n  }\n\n  // コンテンツを挿入\n  const insertContent = html => {\n    const domParser = new DOMParser()\n    const htmlElement = domParser.parseFromString(html, \"text/html\")\n    // console.log(htmlElement)\n    // const contents = htmlElement.querySelectorAll(elementClass)\n    const data = JSON.parse(htmlElement.querySelector(dataID).textContent)\n    console.log(data)\n    // loader.remove()\n    targetElements.forEach(element => {\n      console.log(element)\n      element.textContent = data[element.dataset.jsToday]\n    })\n    // contents.forEach(content => {\n    //   target.insertAdjacentElement('beforeend', content)\n    // })\n  }\n\n  // IDEA: https://stackoverflow.com/a/50812705\n  const fetchContent = async () => {\n    try {\n      const response = await fetch(fetchURL)\n      if (response.ok && response.status !== 404) {\n        const html = await response.text()\n        // console.log(html)\n        insertContent(html)\n      } else {\n        throw new Error('fetch error')\n      }\n\n    } catch (err) {\n      errorHandler(err)\n    }\n  }\n  const init = async () => {\n    fetchContent()\n  }\n\n  init()\n}\n\nexport default rf_todays_count","// 物件スライダー\nconst rf_prop_slider = () => {\n  const propSliders = document.querySelectorAll('[data-js-prop-slider]')\n  let sliders = {}\n\n  const args = {\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    pagination: {\n      el: \".c-prop-slider__pagination\",\n      type: \"progressbar\",\n    },\n    breakpoints: {\n      0: {\n        spaceBetween: 16,\n        slidesPerView: 1.2,\n        slidesOffsetBefore: 32,\n        slidesOffsetAfter: 32,\n      },\n      768: {\n        spaceBetween: 24,\n        slidesPerView: 4.4,\n        slidesOffsetBefore: 40,\n        slidesOffsetAfter: 40,\n      },\n    },\n  }\n\n  const setSwiper = () => {\n    propSliders.forEach(slider => {\n      const propSlider = new Swiper(slider, args)\n      sliders[slider.id] = propSlider\n    })\n  }\n\n  const init = () => {\n    setSwiper()\n  }\n\n  init()\n\n}\n\nexport default rf_prop_slider","// 建物・部屋 詳細ページ共通\n\n// =======================================================\n// NEW 建物・部屋スライド\n// 参考: https://codepen.io/tea4two/pen/LYvLNME?editors=0010\nclass RFBuildroomSlide {\n  #swipers = {\n    //Swiperスライドオブジェクト保管用\n    mainSlide: null,\n    thumbSlide: null,\n    modalMainSlide: null,\n    modalThumbSlide: null,\n  }\n\n  // ローダー\n  #loader = null\n\n  // 一度取得したスライドのデータ(JSON)\n  // 順番(厳守): 1 建物, 2 間取り, 3 部屋 , 4 外観・共用部・周辺環境写真, 5 パノラマ \n  #photos = {\n    build: [],//建物（メイン）\n    floorplan: [], //間取り・部屋\n    // room: [],//部屋\n    exterior: [],//外観・共用部・周辺環境写真\n    panorama: [],//パノラマ、動画\n    // nophoto: [], // no photo\n  }\n\n  // 一度作成したスライドHTMLデータ\n  #photoHTML = {\n    build: [],//建物(メイン)\n    exterior: [],//外観・共用部・周辺環境写真\n    floorplan: [], //間取り・部屋\n    // room: [],//部屋\n    panorama: [],//パノラマ、動画\n  }\n\n  // タブボタン文言\n  #tabBtnTexts = {\n    ja: {\n      build: '建物',\n      exterior: '外観・共用部・周辺',\n      // ↓部屋ページ専用\n      floorplan: '間取り・部屋',\n      // room: '部屋',\n      // ↓ページ共通\n      panorama: 'パノラマ・動画',\n    },\n    en: {\n      build: 'Building',\n      exterior: 'Exterior, common spaces, and surroundings',\n      // ↓部屋ページ専用\n      floorplan: 'Floor plan &amp; Room',\n      // room: 'Room',\n      // ↓ページ共通\n      panorama: 'Panoramas and videos',\n    }\n  }\n\n  // 現在のスライド\n  #currentSlide = null\n\n  // 間取り0件フラグ\n  #isFloorData = true\n\n  // 画像ロードエラーフラグ\n  #isPhotosLoaded = {\n    build: true,\n    floorplan: true, //間取り・部屋\n    // room: true,\n    exterior: true,\n    panorama: true,\n  }\n  \n  // メインスライド（Swiper）設定\n  #swiperMainSetting = {\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\"\n    },\n    pagination: {\n      el: \".swiper-pagination\",\n      type: \"fraction\",\n    },\n    zoom: true,\n  }\n  // サムネイルスライド(Swiper)設定\n  #swiperThumbsSetting = {\n    slidesPerView: 4.5,\n    freeMode: true,\n    spaceBetween: 8,\n    breakpoints: {\n        0: {\n          slidesPerView: 4.5,\n        },\n        768: {\n          slidesPerView: 8.5,\n        },\n      },\n  }\n\n  //モーダルサムネイルスライド(Swiper)設定\n  #swiperModalThumbsSetting = {\n    slidesPerView: 4.5,\n    freeMode: true,\n    spaceBetween: 8,\n    breakpoints: {\n      0: {\n        slidesPerView: 4.5,\n      },\n      768: {\n        slidesPerView: 12.5,\n      },\n    },\n    zoom: true,\n  }\n  // エラー ===\n  #errorMessages = {\n    ja: {\n      nodata: 'データを取得できません',\n    },\n    en: {\n      nodata: 'Failed to get data',\n    }\n  }\n\n  // 要素 ===\n  // メイン\n  #mainSlideParent = document.querySelector(\"[data-js-buildroom-slide]\");\n  #mainSlideContainer = this.#mainSlideParent.querySelector(\"[data-js-buildroom-slide-container]\");\n  #mainSlideElm = this.#mainSlideParent.querySelector(\".swiper\");\n  #slideWrapper = this.#mainSlideElm.querySelector(\".swiper-wrapper\");\n  // サムネイル\n  #thumbSlideContainer = this.#mainSlideParent.querySelector(\"[data-js-buildroom-slide-thumbs-container]\");\n  #thumbElm = this.#mainSlideParent.querySelector(\"[data-js-buildroom-slide-thumbs]\");//.swiper\n  #thumbWrapper = this.#thumbElm.querySelector(\".swiper-wrapper\");\n  // モーダル\n  #modalSlideWindow = document.querySelector(\"[data-js-buildroom-modal]\")\n  #modalSlideElm = this.#modalSlideWindow.querySelector(\".swiper\");\n  #modalSlideWrapper = this.#modalSlideElm.querySelector(\".swiper-wrapper\");\n  // モーダルサムネイル\n  #modalThumbElm = this.#modalSlideWindow.querySelector('[data-js-buildroom-modal-thumbs]')\n  #modalThumbWrapper = this.#modalThumbElm.querySelector(\".swiper-wrapper\");\n\n  //モーダル開くボタンHTML\n  #btnOpenModalHTML = `<button class=\"c-buildroom-slide__btn-open --modal --is-hidden\" data-js-buildroom-modal-open data-js-modal type=\"button\">\n    <span class=\"u-visually-hidden\">拡大</span>\n    </button>`\n  #btnOpenModal = null\n\n  // パノラマ・ムービーを開くボタン\n  #btnOpenPanoramaHTML = `<button class=\"c-buildroom-slide__btn-open --panorama --is-hidden\" data-js-buildroom-panorama-open type=\"button\">`\n  #btnOpenPanorama = null\n\n  //タブ\n  #mainSlideTabContainer = document.querySelector('[data-js-buildroom-slide-tab-container]')\n  #mainSlideTabs = null\n\n  // nodata画像(ファイル側へ移動)\n  // RF_gallery_nophoto = '/assets/img/common/nophoto.webp'\n  // RF_gallery_nofloorplan = '/assets/img/common/nofloorplan.webp'\n\n  // ===\n\n  // 初期化\n  constructor() {\n    this.#init()\n  }\n\n  // ===\n\n  // ❌️. データがない場合の処理（nodata画像を入れる）\n  #setNodata() {\n    // 固定表示の1枚目を削除\n    // https://www.jamesbaum.co.uk/blether/vanilla-js-equivalent-jquery-find-parent-data-remove-class-empty-append/#empty\n    while(this.#slideWrapper.firstChild) {\n      this.#slideWrapper.removeChild(this.#slideWrapper.firstChild)\n    }\n\n    // nodata画像を追加\n    const imgHTML = `<div class=\"swiper-slide\"><img src=\"${RF_gallery_nophoto}\" alt=\"No photo\" class=\"c-buildroom-slide__nodata\"></div>`\n    this.#slideWrapper.insertAdjacentHTML('beforeend', imgHTML)\n\n    // Swiper関連の要素を非表示\n    this.#mainSlideParent.classList.add('--is-slide-disabled')\n\n  }\n\n  // ❌️. エラーメッセージHTML作成\n  #setErrorHTML(type) {\n    const lang = RF_lang\n    const html = `<p class=\"c-buildroom-slide__error\">${this.#errorMessages[RF_lang][type]}</p>`\n    return html\n  }\n\n  // ❌️. エラーハンドラー - データがない場合\n  // エラータイプ: nodata, ...\n  #errorHandler(type) {\n    let html = ''\n\n    // 完全にデータが無い場合(blade側で処理するため多分使用しない)\n    if(type === 'nodata')  {\n      html = this.#setErrorHTML(type)\n      this.#setNodata()\n    }\n  }\n\n  // ===\n  // 🔁 ローダー\n  // ↓未使用なので一旦停止\n  // #setSkeltonLoader() {\n  //   this.#mainSlideContainer.classList.add('--is-active')\n  // }\n  #removeSkeltonLoader() {\n    this.#mainSlideContainer.classList.remove('--is-loading')\n  }\n\n  // ===\n\n  // 💡. 現在のスライドの種類の設定\n  #setCurrentSlide(key) {\n    this.#currentSlide = key\n  }\n\n  // 💡. 現在のスライドの種類の取得\n  #getCurrentSlide() {\n    return this.#currentSlide\n  }\n\n  /**\n   * 💡. スライドデータ（JSON）を取得\n   * \n   * @param {string} key - スライドの種類キー\n   * @returns {object} - スライドデータ(配列)\n   */\n  #getSlideData(key) {\n    return this.#photos[key]\n  }\n\n  /**\n   * \n   * @param {string} key スライドの種類キー\n   * @param {object} data スライドデータ(配列)\n   */\n  #setSlideData(key, data) {\n    this.#photos[key] = data\n  }\n\n  // 💡. スライドHTMLデータ(配列)を取得\n  #getSlideHTMLData(key) {\n    return this.#photoHTML[key];\n  }\n\n  // 💡. スライドHTML(配列)をまとめて追加\n  #setSlideHTMLData(key, data) {\n    this.#photoHTML[key] = data;\n    console.log('スライドHTML: ', this.#photoHTML)\n  }\n  // 💡. スライドHTML(文字列)を取得\n  // #getSlideHTML(key) {\n  //   const photoArr = this.#getSlideHTMLData(key);\n  //   let slideHTML = \"\";\n  //   photoArr.forEach(photoHTML => {\n  //     slideHTML += photoHTML;\n  //   });\n  //   return slideHTML;\n  // }\n\n  // 💡. 間取り写真なしの処理\n  #removeNoFloorDataProcess() {\n    console.log('サムネイルコンテナを表示します。')\n    // サムネイルコンテナを隠す\n    this.#thumbSlideContainer.classList.remove('--is-hidden')\n  }\n  #setNoFloorDataProcess() {\n    console.log('間取り画像がありません。モーダル、タブボタンを非表示にします。')\n    // モーダルボタンorパノラマオープンボタンを非表示\n    this.#showHideModalBtn(false)\n\n    // Swiperを無効化する\n    this.#swipers.mainSlide.disable()\n    this.#swipers.thumbSlide.disable()\n\n    // サムネイルコンテナを隠す\n    this.#thumbSlideContainer.classList.add('--is-hidden')\n    \n  }\n\n  // 画像ロードエラーの場合の処理 ===\n  /**\n   * 画像ロードエラーで非表示にしたサムネイルコンテナを表示\n   */\n  #removeErrorDataProcess() {\n    console.log('サムネイルコンテナを表示します。')\n    // サムネイルコンテナを隠す\n    this.#thumbSlideContainer.classList.remove('--is-hidden')\n  }\n  /**\n   * 画像ロードエラーの場合の処理 - モーダルボタン、サムネイルコンテナを非表示、Swiperを無効化\n   */\n  #setErrorDataProcess() {\n    console.log('画像がありません。ボタン系を非表示にします。')\n    // モーダルボタンorパノラマオープンボタンを非表示\n    this.#showHideModalBtn(false)\n\n    // Swiperを無効化する\n    this.#swipers.mainSlide.disable()\n    this.#swipers.thumbSlide.disable()\n\n    // サムネイルコンテナを隠す\n    this.#thumbSlideContainer.classList.add('--is-hidden')\n  }\n\n  /**\n   * 💡. スライドを全撤去\n   */\n  #removeAllSlides() {\n    this.#swipers.mainSlide.removeAllSlides()\n    this.#swipers.thumbSlide.removeAllSlides()\n    this.#swipers.modalMainSlide.removeAllSlides()\n    this.#swipers.modalThumbSlide.removeAllSlides()\n  }\n\n  /**\n   * 💡. モーダル開く、パノラマ開くボタンの表示・非表示\n   * @param {bool} is_show \n   * @param {bool} is_panorama \n   */\n  #showHideModalBtn(is_show = false, is_panorama = false) {\n    const hideCls = '--is-hidden'\n\n    if(is_show) {\n      // 表示\n      console.log('モーダルかパノラマオープンボタンを表示します')\n      if(is_panorama) {\n        console.log('パノラマオープンボタン表示')\n        this.#btnOpenModal.classList.add(hideCls)\n        this.#btnOpenPanorama.classList.remove(hideCls)\n      } else {\n        console.log('モーダルオープンボタン表示')\n        this.#btnOpenModal.classList.remove(hideCls)\n        if(this.#photos.panorama.length > 0) {\n          this.#btnOpenPanorama.classList.add(hideCls)\n        }\n      }\n\n    } else {\n      // 非表示\n      console.log('モーダル、パノラマオープンボタンを非表示にします')\n      this.#btnOpenModal.classList.add(hideCls)\n      if(this.#photos.panorama.length > 0) {\n        this.#btnOpenPanorama.classList.add(hideCls)\n      }\n    }\n  }\n\n  \n  /**\n   * 💡. モーダルスライドを追加（モーダル開くボタンから呼び出し）\n   * \n   * メモ: モーダルスライドの追加・更新はモーダルが表示されてから行う (display: noneの状態ではSwiperの追加・更新が正常に行われないため)\n   * @param {int} activeIndex \n   */\n  #setModalSlide(activeIndex) {\n    console.log('モーダルスライドを追加 key: ', this.#getCurrentSlide())\n    const key = this.#getCurrentSlide()\n\n    // モーダルのスライドを全撤去\n    this.#swipers.modalMainSlide.removeAllSlides()\n    this.#swipers.modalThumbSlide.removeAllSlides()\n\n    // モーダルスライド用にデータを取得\n    const data = this.#getSlideHTMLData(key)\n\n    // モーダルスライドの追加と更新\n    this.#swipers.modalMainSlide.appendSlide(data)\n    this.#swipers.modalThumbSlide.appendSlide(data)\n    \n    this.#swipers.modalThumbSlide.update()\n    this.#swipers.modalMainSlide.update()\n\n    this.#swipers.modalMainSlide.slideTo(activeIndex)\n    this.#swipers.modalThumbSlide.slideTo(activeIndex)\n  }\n\n\n  /**\n   * 💡. Swiperスライドの設定\n   * @param {string} key 現在のスライドキー\n   */\n  #setSwiperSlide(key) {\n    console.log('Swiperにスライド追加！')\n    // 1. 全撤去\n    this.#removeAllSlides()\n\n    // 2. データを取得\n    const data = this.#getSlideHTMLData(key) //getSlideData()はJSONを返すのでappendできないので、配列HTMLデータを入れる\n\n    // 3. スライド追加\n    // メインスライド\n    this.#swipers.thumbSlide.appendSlide(data)\n    this.#swipers.thumbSlide.update()\n    this.#swipers.thumbSlide.slideTo(0)\n\n    this.#swipers.mainSlide.appendSlide(data)\n    this.#swipers.mainSlide.update()\n    this.#swipers.mainSlide.slideTo(0)\n\n    // モーダルスライドの更新はモーダルオープンボタンを押してから\n\n    // Swiperを有効化する\n    // setTabBtnEvent関数でSwiperが無効化されている場合があるので有効化する\n    console.log('setSwiper', this.#isPhotosLoaded[key])\n    if(this.#isPhotosLoaded[key]) {\n      this.#swipers.mainSlide.enable()\n      this.#swipers.thumbSlide.enable()\n      \n      // 1つ前の処理で、間取り写真がない場合はサムネイルが非表示になっている場合があるので表示する\n      this.#removeNoFloorDataProcess()\n\n      // モーダルボタンorパノラマオープンボタンを表示\n      this.#showHideModalBtn(true, key === 'panorama')\n    }\n\n    // 現在のスライドの種類を更新\n    this.#setCurrentSlide(key)\n  }\n\n\n  /**\n   * 💡. SwiperのスライドHTMLに変換して配列化する\n   * @param {array} photos 写真データ配列\n   * @param {boolean} is_panorama パノラマ写真かどうか\n   * @returns {array} スライドHTML化したものを配列で返す(Swiperスライド形式)\n   */\n  #convertToSwiperHTML(photos, is_panorama = false) {\n    let dataArr = [];\n    //パノラマ写真の場合\n    // let panoramaClass = (is_panorama) ? 'data-js-buildroom-panorama' : '';\n\n    photos.forEach(photo => {\n      // console.log(is_panorama)\n      // console.log(photo)\n      let panoramaAttr = ''\n      //パノラマ・動画ならばdata-js-buildroom-panorama属性と値を追加\n      if(is_panorama) {\n        panoramaAttr = `data-js-buildroom-panorama=\"${photo.url}\"`\n      }\n\n      // Swiper slideテンプレ\n      const nophoto = RF_page_key === 'build' ? RF_gallery_nophoto : RF_gallery_nofloorplan\n      dataArr.push(\n        `<div class=\"swiper-slide\" ${panoramaAttr}>\n          <div class=\"swiper-zoom-container\">\n            <img src=\"${(is_panorama) ? photo.filename : photo}\" alt=\"\" class=\"\" loading=\"lazy\" onerror=\"this.onerror='';this.src='${nophoto}'\">\n          </div>\n        </div>`\n      );\n    });\n\n    return dataArr;\n  }\n\n  /**\n   * 画像のデコード\n   * \n   * 画像が読み込まれているかどうかをチェックするためデコードする\n   * @param {object} img HTML img element\n   */\n  async #imageDecode(img) {\n    await img.decode()\n\n    console.log(`width: ${img.width}, height: ${img.height}`);\n  }\n\n  /**\n   * 💡. 画像ロード状況チェック\n   * \n   * @param {object} photos \n   * @param {boolean} is_panorama \n   * @returns \n   */\n  async #checkPhotoLoad(photos, is_panorama = false) {\n    let counter = 0;\n    let errorCounter = 0;\n    let min = 0;\n    const limit = 3;\n    min = (photos.length > limit) ? limit : photos.length\n    const timeLimit = 30000;\n    console.log('チェックする画像の枚数',  min)\n\n    // https://www.w3schools.com/js/js_async.asp\n    let loaded = new Promise((resolve, reject) => {\n      \n      photos.forEach(async (elm) => {\n        console.log(elm)\n        // Async image load\n        // https://stackoverflow.com/a/64747517\n        //decode method takes some time to resolve so use await\n        const img = new Image();\n        if(is_panorama) {\n          img.src = elm.filename;\n        } else {\n          img.src = elm;\n        }\n\n        // 画像ロードエラー（４０４など）\n        // img.onerror = () => {\n        //   console.log('イメージロードで何らかのエラー')\n        //   errorCounter++\n\n        //   if(errorCounter >= min) {\n        //     reject(false);\n        //   }\n\n        //   return\n        // };\n\n        try {\n          counter++;\n          console.log('画像カウンター: ', counter)\n\n          await this.#imageDecode(img)\n\n          if (counter >= min) {\n            resolve(true);\n          }\n\n        } catch(err) {\n          // 画像のデコードができない（画像が404、ネットワークエラー等）\n          console.log(err)\n          errorCounter++\n\n          if(errorCounter >= min) {\n            reject(true);\n          }\n\n          if (counter >= min) {\n            console.log('エラーありでcounter終了')\n            resolve(true);\n          }\n        }\n\n      });\n\n      setTimeout(() => {\n        reject(false);\n      }, timeLimit); //timeLimit以内に解決しなければfalse\n    });\n\n    return await loaded;\n  };\n\n\n  /**\n   * 写真のロードをチェックし、スライドHTMLを作成する\n   * \n   * @param {string} key スライドの種類キー\n   */\n  async #checkLoadAndSetSlideHTML(key) {\n    let slideHTMLData = null\n\n    const photoData = this.#getSlideData(key)\n    // const data = this.#convertToSwiperHTML(photoData, key === 'panorama');\n    // 配列にHTMLデータを追加\n    // this.#setSlideHTMLData(key, data)\n\n    // 初期写真データロードチェック\n    // TODO: ロードチェックはソートのあとに実施する\n    try {\n      const loaded = await this.#checkPhotoLoad(photoData, key === 'panorama');\n      \n      // 成功時\n      console.log('loaded: ', loaded)\n      console.log(photoData)\n      slideHTMLData = this.#convertToSwiperHTML(photoData, key === 'panorama');\n      \n    } \n    catch (loadError) {\n      console.log('初期写真の取得に失敗')\n      console.error(loadError)\n\n      // 取得エラーを起こした場合、何も表示されないとまずいので、nophoto画像に差し替える\n      // checkPhotoLoadのrejectからtrueが返される\n      if(loadError) {\n        console.log('写真取得に失敗。no photoに差し替えます')\n        // this.#setSlideData(key, [RF_gallery_nophoto])\n        this.#photos[key] = [{\n          filename: RF_gallery_nophoto\n        }]\n\n        // データ取り直し\n        const data = this.#getSlideData(key)\n        slideHTMLData = this.#convertToSwiperHTML(data);\n\n        // 画像ロードエラーフラグを設定\n        // this.#isLoaded = false\n        this.#isPhotosLoaded[key] = false\n      }\n      \n    }\n    finally {\n      // 画像がno photoのみの場合、Swiperをセットしない\n      const registeredPhoto = this.#photos[key][0].substring(this.#photos[key][0].lastIndexOf('/') + 1)\n      const defaultNoPhoto = RF_gallery_nophoto.substring(RF_gallery_nophoto.lastIndexOf('/') + 1)\n      if(\n        this.#photos[key].length === 1 && \n        registeredPhoto === defaultNoPhoto\n      ) {\n        console.log('no photoのみです')\n        this.#isPhotosLoaded[key] = false\n      }\n\n      // HTMLデータ配列を追加\n      console.log('スライドHTMLデータをセットします: ', slideHTMLData)\n      this.#setSlideHTMLData(key, slideHTMLData)\n\n    }\n\n  }\n\n  // 💡. ムービー、パノラマの別ウィンドウ開く設定\n  #openPanoramaWindow() {\n    const windowSetting = 'width=800,height=600,left=0,top=0,menubar=no,status=no'\n    // 現在表示中のスライド要素を取得\n    const activeSlide = this.#mainSlideElm.querySelector('.swiper-slide-active')\n    const url = activeSlide.dataset.jsBuildroomPanorama\n    console.log(url)\n    window.open(url, '', windowSetting)\n  }\n\n  // 💡. パノラマオープンボタンの設定\n  #setPanoramaOpenBtn() {\n    console.log('パノラマオープンボタンの追加')\n    // パノラマオープンボタンの追加\n    this.#mainSlideContainer.insertAdjacentHTML('beforeend', this.#btnOpenPanoramaHTML)\n    this.#btnOpenPanorama = this.#mainSlideContainer.querySelector('[data-js-buildroom-panorama-open]')\n    // this.#btnOpenPanorama.classList.add('--is-hidden')\n\n    // イベントリスナーの設定\n    // このボタンは別ウィンドウでムービー、パノラマを開く\n    // メインのSwiper要素に設定されている data属性の値を取ってきて、別ウィンドウで開く\n    this.#btnOpenPanorama.addEventListener('click', () => {\n      // const url = this.#swipers.mainSlide\n      this.#openPanoramaWindow()\n    })\n  }\n\n  // 💡. モーダルオープンボタン\n  #setModalOpenBtn() {\n    this.#mainSlideContainer.insertAdjacentHTML(\n      \"beforeend\", this.#btnOpenModalHTML\n    )\n    this.#btnOpenModal = this.#mainSlideContainer.querySelector('[data-js-buildroom-modal-open]')\n    this.#btnOpenModal.dataset.jsModal = '#' + this.#modalSlideWindow.id //対象のIDを設定\n  }\n\n  // ===\n\n  /**\n   * 7-2. タブボタンイベントの設定\n   * \n   */\n  #setTabBtnEvent() {\n    this.#mainSlideTabs.forEach(btn => {\n      // const key = btn.dataset.jsBuildroomSlideTab\n      // let data = null\n      let is_loading = false\n\n      btn.addEventListener('click', async (e) => {\n        const key = e.target.dataset.jsBuildroomSlideTab\n\n        // ロード中なのでストップ\n        if(is_loading) {\n          console.log('ロード中なのでストップ')\n          return\n        }\n\n        // ロード開始をフラグで管理\n        is_loading = true\n\n        console.log('タブイベント',  key, this.#isFloorData)\n\n        // 同じボタンをクリックした場合は処理しない\n        if (this.#getCurrentSlide() === key) {\n          console.log(\"同じボタンなのでストップ\");\n          is_loading = false\n          return;\n        }\n\n        // 一旦モーダルオープン、パノラマオープンボタンを両方とも非表示\n        this.#showHideModalBtn(false)\n\n        // 一旦、Swiperを無効化する\n        this.#swipers.mainSlide.disable()\n        this.#swipers.thumbSlide.disable()\n\n        // アクティブボタンの切り替え\n        this.#mainSlideTabs.forEach(btn => {\n          btn.classList.remove('--is-active')\n        })\n        if(e.target.tagName === 'BUTTON') e.target.classList.add('--is-active') \n\n        // データ取得\n        if (this.#getSlideHTMLData(key).length) {\n          // 取得済みなのでデータからロードし、Swiperを有効化\n          console.log(\"データからロード\");\n          this.#setSwiperSlide(key)\n          \n          // 画像のbroken link処理\n          if (!this.#isPhotosLoaded[key]) {\n            this.#setErrorDataProcess()\n          }\n\n          is_loading = false\n        } else {\n          // データ取得\n          console.log(\"未HTML化なのでHTML化してロード\");\n          \n          // ローダー設定\n          this.#loader.reinsertLoader() //同じローダーを再挿入\n          // this.#setSkeltonLoader()\n\n          const photoData = this.#getSlideData(key)\n          const data = this.#convertToSwiperHTML(photoData,key === 'panorama')\n          this.#setSlideHTMLData(key, data)\n\n          // ロード\n          try {\n            const loaded = await this.#checkPhotoLoad(photoData, key === 'panorama')\n\n          } catch (error) {\n            console.log('ロードに失敗しました')\n            console.log(error)            \n\n          } finally {\n            console.log('ロードされました')\n\n            // ローダー削除\n            this.#loader.removeLoader()\n            this.#removeSkeltonLoader()\n\n            // Swiperを有効化する\n            this.#setSwiperSlide(key)\n\n            // 画像のbroken link処理\n            if (!this.#isPhotosLoaded[key]) {\n              this.#setErrorDataProcess()\n            }\n\n            is_loading = false\n          }\n        }\n\n      })\n    })\n  }\n\n  /**\n   * 7-1. タブボタン要素の作成\n   * \n   * @param {string} key \n   * @returns {string} 1つのタブボタン要素(HTML)\n   */\n  #createTabHTML(key) {\n    let lang = RF_lang\n    return `<button type=\"button\" data-js-buildroom-slide-tab=\"${key}\" type=\"button\">${this.#tabBtnTexts[lang][key]}</button>`\n  }\n\n  // \n  /**\n   * 7.タブの設定\n   */\n  #setTabs() {\n    let tabHTML = '';\n    for(let key in this.#photos) {\n      // if (!this.#photos.hasOwnProperty(key)) continue;\n\n      // 建物ページか部屋ページを判定\n      // 建物↓\n      if(\n        RF_page_key === 'build' && \n        (\n          key === 'build' || \n          key === 'exterior' || \n          key === 'panorama'\n        )\n      ) {\n        // console.log('タブ: 建物です')\n        if(this.#photos[key].length > 0) tabHTML += this.#createTabHTML(key)\n      }\n      // 部屋↓\n      else if(\n        RF_page_key === 'room' &&\n        (\n          key === 'room' || \n          key === 'exterior' || \n          key === 'floorplan' || \n          key === 'panorama'\n        )\n      ) {\n        // console.log('タブ: 部屋です')\n        if(this.#photos[key].length > 0) tabHTML += this.#createTabHTML(key)\n      }\n\n    }\n    // タブHTMLの挿入、登録\n    this.#mainSlideTabContainer.insertAdjacentHTML('beforeend', tabHTML)\n    this.#mainSlideTabs = Array.from(this.#mainSlideTabContainer.querySelectorAll(\"[data-js-buildroom-slide-tab]\"))\n\n    // 最初のタブにactiveクラスを付与\n    const key = this.#getCurrentSlide()\n    console.log('タブ用のkey: ', key)\n    const activeTab = this.#mainSlideTabs.filter(tab => tab.dataset.jsBuildroomSlideTab === key)\n    activeTab[0].classList.add('--is-active')\n    \n    // 7-2. タブボタンイベントの設定\n    this.#setTabBtnEvent()\n  }\n\n  // ===\n  \n  /**\n   * 6-1.モーダルオープンボタンを押したとき、アクティブインデックスを更新するイベントを設定\n   * \n   * モーダルのSwiperをメインSwiperと同期させるため\n   */\n  #setModalActiveIndex() {\n    this.#btnOpenModal.addEventListener('click', () => {\n      console.log('モーダルアクティブインデックスを更新、モーダルスライドを追加')\n      this.#setModalSlide(this.#swipers.mainSlide.activeIndex)\n    })\n  }\n\n  /**\n   * 6. モーダルウィンドウの制御\n   * \n   * モーダル開くボタン、パノラマ・動画ボタンの追加(存在すれば)\n   */\n  #setModalWindowAction() {\n    // ⏹️モーダル開くボタン追加\n    this.#setModalOpenBtn()\n\n    // ⏹️パノラマ・動画が存在すれば、パノラマオープンボタン追加\n    if(this.#photos.panorama.length > 0) {\n      this.#setPanoramaOpenBtn()\n    }\n\n    // 現在のスライドの種類に合わせて、モーダルかパノラマオープンボタンを表示\n    const key = this.#getCurrentSlide()\n    this.#showHideModalBtn(true, key === 'panorama')\n\n    // モーダルオープンボタンの設定(RfModalsを使用)\n    const _modalArgs = {\n      modal: this.#modalSlideWindow,\n      modalOpenBtn: this.#btnOpenModal,\n    }\n    if(RF_GLOBALS.rf_modals) {\n      console.log('モーダル作成: すでにモーダルインスタンスがあります。')\n      RF_GLOBALS.rf_modals.modal(_modalArgs)\n    } else {\n      console.log('モーダル作成: モーダルインスタンスはありません。作成します')\n      RF_GLOBALS.rf_modals = new RF_GLOBALS.RfModals(_modalArgs)\n    }\n\n    // 6-1. モーダル開くボタンクリックイベントの設定\n    this.#setModalActiveIndex()\n  }\n\n  // ===\n\n  // 5. Swiper初期化（初回のみ）\n  #setSwiper() {\n    console.log('Swiper初期化')\n    // メインサムネイル\n    this.#swipers.thumbSlide = new Swiper(this.#thumbElm, this.#swiperThumbsSetting);\n\n    // メイン\n    let swiperMainSetting = {\n      ...this.#swiperMainSetting,\n      // サムネイルと連動\n      thumbs: {\n        swiper: this.#swipers.thumbSlide,\n      }\n    }\n    this.#swipers.mainSlide = new Swiper(this.#mainSlideElm, swiperMainSetting);\n\n\n    // モーダルサムネイル\n    this.#swipers.modalThumbSlide = new Swiper(this.#modalThumbElm, this.#swiperModalThumbsSetting);\n\n\n    // モーダルメイン\n    let swiperModalMainSetting = {\n      ...this.#swiperMainSetting,\n      // サムネイルと連動\n      thumbs: {\n        swiper: this.#swipers.modalThumbSlide,\n      }\n    }\n    this.#swipers.modalMainSlide = new Swiper(this.#modalSlideElm, swiperModalMainSetting);\n    \n\n    // コントロール連携\n    this.#swipers.modalThumbSlide.controller.control = [this.#swipers.thumbSlide] //サムネイル ↔ モーダルサムネイル\n    this.#swipers.thumbSlide.controller.control = [this.#swipers.modalThumbSlide] // モーダルサムネイル ↔ サムネイル\n    this.#swipers.mainSlide.controller.control = [this.#swipers.modalMainSlide] // モーダルメイン ↔ メイン\n    this.#swipers.modalMainSlide.controller.control = [this.#swipers.mainSlide] // メイン ↔ モーダルメイン\n\n    // 6以降の処理をsetInitPhotosへ移動    \n\n  }\n\n  // ===\n\n  // 4. 初回SwiperのスライドHTML配列を文字列化して挿入する\n  #insertInitSlides(key) {\n    let html = ''\n\n    const arr = this.#getSlideHTMLData(key)\n\n    arr.forEach(data => {\n      html += data\n    })\n\n    console.log('初期スライドHTML',html)\n\n    this.#slideWrapper.insertAdjacentHTML('beforeend', html)\n    this.#thumbWrapper.insertAdjacentHTML('beforeend', html)\n    \n  }\n\n  // ===\n\n  // 3. 初期データを処理\n  async #setInitPhotos() {\n    // 初回のキーチェック\n    let firstKey = ''// 初回のキー\n\n    // データの中で最初に空ではないキーをチェックする\n    if (RF_page_key === 'build') {\n      // (obj) => Object.keys(obj).find((i) => obj[i] === true)\n      firstKey = Object.keys(this.#photos).find(key => {\n        // 建物では間取りと部屋は除外\n        if (\n          key === 'floorplan' ||\n          key === 'room'\n        ) {\n          return false\n        }\n\n        if (this.#photos[key].length > 0) return true\n      })\n\n    } else if (RF_page_key === 'room') {\n      // 部屋ページでは常に最初は「間取り・部屋」になる\n      firstKey = 'floorplan'\n    }\n    console.log('firstKey: ', firstKey)\n    // 初回のキーチェックここまで ===\n\n    //💡. 現在のスライドの種類をセット\n    this.#setCurrentSlide(firstKey)\n\n    // TODO: 画像ロードチェックとスライドHTML作成\n    await this.#checkLoadAndSetSlideHTML(firstKey)\n\n\n    // 固定表示の1枚目を削除\n    // https://www.jamesbaum.co.uk/blether/vanilla-js-equivalent-jquery-find-parent-data-remove-class-empty-append/#empty\n    while (this.#slideWrapper.firstChild) {\n      this.#slideWrapper.removeChild(this.#slideWrapper.firstChild)\n    }\n\n    // 4. Swiperの初回スライドHTMLを挿入\n    this.#insertInitSlides(firstKey)\n\n    // 5. Swiperを初期化(1回のみ)\n    this.#setSwiper()\n\n    // 6.モーダルとパノラマオープンボタンの追加(1回のみ)\n    this.#setModalWindowAction()\n\n    // 7.タブの設定\n    this.#setTabs()\n\n    // 画像のbroken link処理\n    const key = this.#getCurrentSlide()\n    if (!this.#isPhotosLoaded[key]) {\n      this.#setErrorDataProcess()\n    }\n\n    // ローダーを削除\n    this.#loader.removeLoader()\n    this.#removeSkeltonLoader()\n      \n  }\n\n  // ===\n\n  /**\n   * 2-2. 初期画像を保存\n   * \n   * @param {object} filename 画像データURL \n   * @param {string} part 画像種別番号\n   */\n  #sortFirstDataAndSave(filename, part) {\n    switch(part) {\n      case '001': //建物メイン写真\n        this.#photos.build.push(filename);\n        break\n      case '101': //間取り写真\n        this.#photos.floorplan.push(filename);\n        break\n    }\n  }\n\n  /**\n   * 2-2. 部屋ページでの外観データを保存\n   * \n   * @param {object} buildData 建物データ配列\n   */\n  #sortBuildDataAndSave(buildData) {\n    // 建物メイン写真がある場合はグローバル変数から配列先頭に保存\n    // if(typeof RF_firstbuild_photo !== 'undefined') {\n    //   this.#photos.build.unshift(RF_firstbuild_photo)\n    // }\n\n    // 建物、外観、共用、周辺写真をまとめてexteriorに格納\n    buildData.forEach((elm) => {\n      switch(elm.part) {\n        // 建物、外観、共用部、周辺\n        case '001': //建物メイン写真(部屋ページの場合はJSONから取得)\n        case '002':\n        case '003':\n        case '004':\n        case '005':\n        case '031':\n        case '032':\n        case '033':\n        case '034':\n        case '035':\n        case '036':\n        case '037':\n        case '038':\n        case '039':\n          this.#photos.exterior.push(elm.filename)\n          break;\n      }\n    })\n    console.log('部屋ページ: 建物写真が存在し、挿入後のフォトデータ', this.#photos)\n  }\n\n  /**\n   * 2-2. 取得したJSONデータをソートし#photosに保存\n   * \n   * @param {object} data JSONデータ\n   */\n  #sortDataAndSave(data) {\n    data.forEach((elm) => {\n      // console.log(elm.filename)\n      switch(elm.part) {\n        // 外観\n        // case '001': //建物メイン写真(グローバル変数から取得に変更)\n        case '002':\n        case '003':\n        case '004':\n        case '005':\n          this.#photos.build.push(elm.filename);\n          break;\n        // 周辺\n        case '031':\n        case '032':\n        case '033':\n        case '034':\n        case '035':\n        case '036':\n        case '037':\n        case '038':\n        case '039':\n          this.#photos.exterior.push(elm.filename);\n          break;\n        // 間取り\n        // case '101':\n        //   this.#photos.floorplan.push(elm.filename);\n        //   break;\n        // 部屋\n        case '102':\n        case '103':\n        case '104':\n        case '105':\n        case '106':\n        case '108':\n        case '109': \n        case '110': \n        case '111': \n        case '131': \n        case '132': \n        case '133': \n        case '135': \n        case '136': \n        // this.#photos.room.push(elm.filename); //間取りに統合\n        this.#photos.floorplan.push(elm.filename);\n          break;\n      }\n    })\n\n    // 部屋ページの間取り写真だけは特別で、写真が無くてもタブ表示し、nophoto画像を挿入する\n    // TODO: 削除予定\n    console.log('間取り写真枚数', this.#photos.floorplan.length)\n    console.log('ソート後の写真データ(this.#photos)', this.#photos)\n  }\n\n  /**\n   * 2-1. パノラマ・動画のデータを保存(存在すれば)\n   * \n   * @return void\n   */\n  #savePanoramaData() {\n    if (typeof RF_gallery_panorama !== 'undefined') {\n      RF_gallery_panorama.forEach(elm => {\n        this.#photos.panorama.push({\n          filename: elm.filename,\n          url: elm.url\n        })\n      })\n    }\n  }\n\n  /**\n   * 2. データ取得\n   */\n  async #fetchPhotoData() {\n    //ローダーを挿入\n    this.#loader = new RF_GLOBALS.RfLoader({\n      target: this.#slideWrapper,\n    })\n\n\n    // 1. パノラマデータを取得(あれば)\n    this.#savePanoramaData()\n\n    // 2. 初期画像データを取得\n    // TODO: 1枚目の写真が静的には存在して、JSONに存在しない場合もあるので対応する\n    // 例. http://141.147.169.110/rf/tatemono/73682/1700\n    let isInitialData = false;\n    let img = new Image();\n    try {\n      if(RF_page_key === 'build') {\n        img.src = RF_firstbuild_photo\n      }\n      else if(RF_page_key === 'room') {\n        img.src = RF_firstfloorplan_photo\n      }\n\n      // 存在チェック\n      console.log('初期画像', img)\n      await this.#imageDecode(img)\n\n      isInitialData = true\n    }\n    catch(err) {\n      console.log('初期画像ロードエラー: ', err)\n\n      // no photo画像設定\n      if(RF_page_key === 'build') {\n        img.src = RF_gallery_nophoto\n        // MEMO: 002~005が存在する場合があるので単純にここでfalseにはできない\n        // this.#isPhotosLoaded['build'] = false\n      } \n      else if(RF_page_key === 'room') {\n        img.src = RF_gallery_nofloorplan\n        // this.#isPhotosLoaded['floorplan'] = false\n      }\n    }\n    finally {\n      console.log('ロードチェック後の初期画像', img)\n      let part\n      if(RF_page_key === 'build') part = '001'\n      else if(RF_page_key === 'room') part = '101'\n\n      this.#sortFirstDataAndSave(img.src, part)\n    }\n\n    console.log('初期画像処理後の写真データ(this.#photos)', this.#photos)\n    \n    \n    // 3. その他の画像データを取得\n    try {\n      // データ: RF_gallery_url\n      const fetchedData = await fetch(RF_gallery_url)\n      const data = await fetchedData.json();\n\n      console.log('取得した'+ RF_page_key +'データ(JSON): ', data)\n\n      // 部屋ページの場合 - 外観写真データも取得する\n      let dataBuild = []\n      if(RF_page_key === 'room') {\n        console.log('部屋ページなので、外観写真も取得')\n        let fetchedBuildData = await fetch(RF_gellery_tatemono_url)\n        dataBuild = await fetchedBuildData.json();\n        console.log('【部屋】取得したデータ(外観)(JSON): ', dataBuild)\n      }\n\n      // 写真データがまったくない場合は処理をエラー処理へ飛ばす\n      // 建物\n      if(\n        RF_page_key === 'build' && \n        !isInitialData &&\n        !data.length && \n        typeof RF_firstbuild_photo === 'undefined'\n      ) {\n        throw \"No data\";\n      }\n      // 部屋\n      if(\n        RF_page_key === 'room' && \n        !isInitialData &&\n        !data.length &&\n        !dataBuild.length &&\n        typeof RF_firstbuild_photo === 'undefined'\n      ) {\n        throw \"No data\";\n      }\n\n      //存在すればデータをソート\n      this.#sortDataAndSave(data)\n      // 部屋ページ専用（外観写真があればソートする）\n      if(RF_page_key === 'room' && dataBuild.length > 0) {\n        this.#sortBuildDataAndSave(dataBuild)\n      }\n\n      // 3. 初期データを挿入\n      this.#setInitPhotos()\n\n      // 4~は setInitPhotos内で実行\n\n    } catch (err) {\n      console.dir(err);\n      // エラーハンドリング - データがない、リファレンスエラー\n      this.#errorHandler('nodata');\n\n      this.#loader.removeLoader() //ローダー削除\n      this.#removeSkeltonLoader()\n    }\n  }\n\n  /**\n   * 1. init\n   * \n   */\n  async #init()  {\n    try {\n      //2. データ取得\n      this.#fetchPhotoData();\n\n    } catch (err) {\n      \n    }\n  }\n\n}\n\n// =======================================================\n// OLD\nconst rf_buildroom_main_slide = () => {\n  const mv_thumbs_args = {\n    spaceBetween: 8,\n    freeMode: true,\n    watchSlidesProgress: true,\n    breakpoints: {\n      0: {\n        slidesPerView: 4.5,\n      },\n      768: {\n        slidesPerView: 8.5,\n      },\n    },\n  }\n  const mv_thumbs = new Swiper('[data-js-buildroom-mv-thumbs]', mv_thumbs_args)\n\n  const mv_args = {\n    pagination: {\n      el: \".swiper-pagination\",\n      type: \"fraction\",\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    thumbs: {\n      swiper: mv_thumbs,\n    },\n  }\n  const mv = new Swiper('[data-js-buildroom-mv]', mv_args)\n}\n\nconst rf_buildroom_related_slide = () => {\n}\n\nexport { RFBuildroomSlide, rf_buildroom_main_slide, rf_buildroom_related_slide }","// CTAナビ\nconst rf_cta_navi_tel = () => {\n  // const nav = document.querySelector('.c-cta-navi-tel');\n  const btn = document.querySelector(['[data-js-cta-navi-tel]']);\n  const nav = document.querySelector(btn.dataset.jsCtaNaviTel);\n  \n  btn.addEventListener('click', () => {\n    console.log(nav)\n    nav.classList.toggle('--is-open')\n  })\n\n  console.dir(btn)\n}\n\nexport default rf_cta_navi_tel","// 関連物件スライダー\nconst rf_related_prop_slider = () => {\n  const relatedPropSliders = document.querySelectorAll('[data-js-related-prop-slider]')\n  const sliders = []\n  const args = {\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    pagination: {\n      el: \".c-prop-slider__pagination\",\n      type: \"progressbar\",\n    },\n    init: false, //あとで発動\n    breakpoints: {\n      0: {\n        spaceBetween: 16,\n        slidesPerView: 1.4,\n        slidesOffsetBefore: 32,\n        slidesOffsetAfter: 32,\n      },\n      768: {\n        spaceBetween: 24,\n        slidesPerView: 3.5,\n        slidesOffsetBefore: 40,\n        slidesOffsetAfter: 40,\n      },\n    },\n  }\n\n  // Swiper設定\n  const setSwiper = () => {\n    relatedPropSliders.forEach(slider => {\n      const relatedPropSlider = new Swiper(slider, args)\n      console.dir(relatedPropSlider)\n      sliders.push(relatedPropSlider)\n    })\n    onLoaded()\n  }\n\n  // ロード完了アクション\n  const onLoaded = () => {\n    sliders.forEach(slider => {\n      slider.on('init', () => {\n        //ローダーを削除\n        const loader = slider.el.querySelector('.c-prop-slider__loader')\n        if (loader) {\n          loader.remove()\n        }\n      })\n      slider.init()\n    })\n  }\n\n  const init = () => {\n    setSwiper()\n  }\n\n  init()\n}\n\nexport default rf_related_prop_slider","const rf_ward = () => {\n  const dataProp = 'jsWardSelect'\n  const form = document.querySelector('#sys-form')\n  const btns = Array.from(document.querySelectorAll('[data-js-ward-select]'))\n  const checkBoxes = btns.filter(btn => btn.tagName === 'INPUT')\n  const boundaries = btns.filter(btn => btn.tagName === 'g')\n  let currentWards = []\n  let selectedWards = []\n  const toggleClass = '--is-active'\n\n  // 現在選択中の区\n  const getWards = () => {\n    return selectedWards\n  }\n\n  // １つの区\n  // const getWard = ward => {\n\n  // }\n\n  const removeWard = ward => {\n    const index = selectedWards.indexOf(ward)\n    selectedWards.splice(index, 1)\n    console.log('削除後', selectedWards)\n  }\n\n  // セット\n  const setWard = ward => {\n    selectedWards.push(ward)\n  }\n\n  // 現在の区\n  const getCurrentWards = () => {\n    return currentWards\n  }\n  const setCurrentWards = wards => {\n    currentWards = [...wards]\n    console.log('前の区', currentWards)\n  }\n\n\n  // チェックボックスのトグル\n  const toggleCheckbox = (isAdd, dom) => {\n    // 差分チェック\n    let differences = null\n    if (isAdd) {\n      differences = getWards().filter(element => !(getCurrentWards().includes(element)));\n    } else {\n      differences = getCurrentWards().filter(element => !(getWards().includes(element)));\n    }\n    console.log('差分', differences)\n\n    //要素チェック\n    const isCheckbox = (dom.tagName === 'INPUT')\n    console.log('checkbox?', isCheckbox)\n\n    differences.forEach(diff => {\n      console.log('差分', diff)\n      const [selectedBoundary] = boundaries.filter(bound => bound.dataset[dataProp] === diff)\n      const [selectedCheckbox] = checkBoxes.filter(checkbox => checkbox.dataset[dataProp] === diff)\n      console.log('選択された', selectedBoundary, selectedCheckbox)\n      selectedBoundary.classList.toggle(toggleClass, isAdd)\n      selectedCheckbox.checked = isAdd\n    })\n  }\n\n  const setToggleAction = () => {\n    btns.forEach(btn => {\n      btn.addEventListener('click', () => {\n        let isAdd = true // true or false\n        let clickedElm = null\n        setCurrentWards(getWards()) //現在の区を一旦保存\n        const ward = btn.dataset.jsWardSelect\n        if (getWards().includes(ward)) {\n          console.log('削除')\n          isAdd = false\n          removeWard(ward)\n        } else {\n          console.log('追加')\n          setWard(ward)\n        }\n        console.log('現在', selectedWards)\n        console.log('１個前', currentWards)\n\n        // 地図クリックの場合チェックボックスをトグル\n        toggleCheckbox(isAdd, btn)\n      })\n    })\n  }\n\n  // すべてのチェックを外す - 画面戻ったときの対策\n  const clearAllCheckboxes = () => {\n    btns.forEach(btn => {\n      console.dir(btn)\n      if (btn.tagName === 'INPUT') {\n        console.log(btn.checked)\n        console.log(btn.defaultChecked)\n        btn.setAttribute('autocomplete', 'off')\n        btn.checked = false\n      }\n    })\n  }\n\n  const resetForm = () => {\n    console.log('reset!')\n    form.reset()\n  }\n\n  const init = () => {\n    // resetForm()\n    clearAllCheckboxes()\n    // window.addEventListener('load', () => {\n    //   console.log('loaded!')\n    // })\n    setToggleAction()\n  }\n\n  init()\n}\n\nexport default rf_ward","// 検索結果 - お部屋リストスライダー\nconst rf_result_room_slide = () => {\n  const room_slides = document.querySelectorAll('[data-js-result-room-slide]')\n  const pic_area_selector = '[data-js-result-room-parent]'\n  const slide_selector_class = 'swiper'\n  const slide_wrapper_class = 'swiper-wrapper'\n  const disabled_class = '--is-disabled'\n  const flash_msg_class = 'c-result-room__flash-msg'\n\n  // const swipers = null //TODO: swiperのインスタンスを保持\n  let click_handlers = {}\n\n  // 間取りスライドデータの種類\n  const floorplan_type = ['102', '103', '104', '105']\n\n  const swiper_arg = {\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    // spaceBetween: 16,\n    // slidesOffsetAfter: 16,\n    // slidesOffsetBefore: 16,\n  }\n\n  const msgs = {\n    no_img: 'これ以上画像はありません',\n    fetch_err: 'データ取得エラー',\n    // no_data: 'データがありません',\n  }\n\n\n  // フラッシュメッセージ\n  const insertFlashMessage = (msg, pic_area) => {\n    // メッセージを表示中は、追加しない\n    if (pic_area.querySelector(`.${flash_msg_class}`)) {\n      console.log('Traffic jam right now!!!')\n      return\n    }\n    \n    const msg_html = `<p class=\"${flash_msg_class}\">${msg}</p>`\n\n\n    pic_area.insertAdjacentHTML('beforeend', msg_html)\n    const msg_inserted = pic_area.querySelector(`.${flash_msg_class}`)\n    console.log(msg_inserted)\n\n\n    // remove\n    msg_inserted.addEventListener('transitionend', () => {\n      msg_inserted.remove()\n    })\n\n    // タイマー\n    setTimeout(() => {\n      msg_inserted.classList.add('--is-deactive')\n    }, 3000)\n\n  }\n\n  // 取得エラー\n  const handleError = (err_msg, pic_area) => {\n    let msg = ''\n    // フラッシュメッセージ表示\n    switch (err_msg) {\n      case 'no_img': //画像が１枚以下\n        msg = msgs.no_img\n        pic_area.classList.add('--is-no-slide')\n        break\n      case 'fetch_err':\n        msg = msgs.fetch_err\n        break\n      default:\n        msg = msgs.fetch_err\n    }\n    insertFlashMessage(msg, pic_area)\n  }\n\n  //古いwrapperを削除し空のwrapperを作成(子要素を全削除するため)\n  const removeAllChildren = (target_slide, wrapper) => {\n    const new_wrapper = wrapper.cloneNode(false)\n    // target_slide.insertAdjacentElement('afterbegin', new_node)\n    target_slide.replaceChild(new_wrapper, wrapper)\n  }\n\n  // Swiperの設定\n  const setSwiper = (data, target_slide) => {\n    let html = ''\n    data.forEach(item => {\n      // <img src=\"${item.filename}\" alt=\"${item.part}\" loading=\"lazy\">\n      // エラー画像: ページ側に設定\n      html += `<div class=\"c-result-room__slide-item swiper-slide\">\n      <img src=\"${item.filename}\" alt=\"${item.name}\" loading=\"lazy\" onerror=\"this.onerror='';this.src='${RF_gallery_nophoto}'\">\n      </div>`\n    })\n\n    // const wrapper = target_slide.querySelector(`.${slide_wrapper_class}`)\n\n    // TODO: 間取りは残すのでこの処理は入れない\n    // removeAllChildren(target_slide, wrapper)\n\n    const new_wrapper = target_slide.querySelector(`.${slide_wrapper_class}`)\n    new_wrapper.insertAdjacentHTML('beforeend', html)\n\n    // Swiper起動\n    // TODO: スライダーインスタンスを保管してコントロール可能にするかもしれない\n    const swiper = new Swiper(target_slide, swiper_arg)\n    swiper.slideTo(1) //２枚目のスライドへ移動させる\n  }\n\n  // スライドデータの抽出\n  const extractSlideData = (data) => {\n    return data.filter(item => floorplan_type.includes(item.part))\n  }\n\n  // スライドデータの取得\n  const getSlideData = async (url) => {\n    try {\n      const response = await fetch(url)\n\n      // データ取得エラー\n      if (!response.ok) {\n        throw new Error('fetch_err')\n      }\n\n      const data = await response.json()\n      console.log(data)\n\n      const extracted_data = extractSlideData(data)\n      console.log(extracted_data)\n\n      // データ数が１の場合スライドさせない\n      if (extracted_data.length > 1) {\n        return extracted_data\n      } else {\n        throw new Error('no_img')\n      }\n    } catch (err) {\n      console.dir(err)\n      return err.message\n    }\n  }\n\n  // ボタンクリックアクション\n  async function setClickAction(args, event) {\n    // console.log(this)\n    // console.log('渡されたデータ', args, event)\n    const [btn] = args\n    const url = btn.dataset.jsResultRoomSlide\n    const pic_area = btn.closest(pic_area_selector)\n\n    // ボタン無効化中は操作しない\n    if (btn.classList.contains(disabled_class)) return false\n\n    // ローダー作成 - _loader.js\n    const loader = new RF_GLOBALS.RfLoader({\n      target: pic_area\n    })\n\n    // ボタン無効化\n    btn.classList.add(disabled_class)\n\n    try {\n      const data = await getSlideData(url)\n      console.log(data)\n\n      // JSONデータかどうかを確認\n      if (typeof data === 'object' && JSON.parse(JSON.stringify(data))) {\n        // データ取得成功\n        const target_slide = btn.closest(`.${slide_selector_class}`)\n        const id = btn.dataset.jsResultRoomId\n        btn.removeEventListener('click', click_handlers[id])\n\n        // ハンドラーをオブジェクトから削除（容量節約のため）\n        delete click_handlers[id]\n        \n        // console.log(click_handlers)\n        setSwiper(data, target_slide)\n      } else {\n        throw new Error(data)\n      }\n    } catch (err) {\n      // なんらかのエラー\n      handleError(err.message, pic_area)\n    }\n\n    // ボタン有効化\n    btn.classList.remove(disabled_class)\n\n    // ローダー削除\n    loader.removeLoader()\n  }\n\n  const setClickHandler = (btn) => {\n    const id = btn.dataset.jsResultRoomId\n    // bindを使用した場合、別関数になるのでremoveEventListenerできない。故にbindしたもの保存して使う\n    click_handlers[id] = setClickAction.bind(null, [btn])\n    console.log(click_handlers)\n    btn.addEventListener('click', click_handlers[id])\n    btn.click()\n    // const clickEvent = new Event('click')\n    // btn.dispatchEvent(clickEvent)\n  }\n\n  // ボタンクリックイベント設定\n  const setSlideAction = () => {\n    room_slides.forEach(btn => {\n      btn.addEventListener('click', () => {\n        setClickHandler(btn)\n      }, {\n        once: true\n      })\n    })\n  }\n\n  const init = () => {\n    setSlideAction()\n  }\n\n  init()\n}\n\nexport default rf_result_room_slide","// 検索 - 駅・沿線\n\nconst rf_search_ensen_checkbox = () => {\n  const forms = document.querySelectorAll('[data-js-form-checkbox]')\n  const form_ensen_step_one_id = 'form-ensen-step1'\n  const form_ensen_steps_id = [\n    form_ensen_step_one_id,\n  ]\n  const btn_search_id = 'form-ensen-submit'\n  const btn_disabled_class = '--is-disabled'\n  let checkboxes = []\n\n  // 「選択・検索」ボタンのクラスをトグル\n  const toggleBtnClass = (el, status) => {\n    const is_disabled = !status\n    el.classList.toggle(btn_disabled_class, is_disabled)\n    if (is_disabled) {\n      el.setAttribute('disabled', 'disabled')\n    } else {\n      el.removeAttribute('disabled')\n    }\n  }\n\n  // チェックボックス操作のコールバック関数\n  // 役割: 沿線の選択の場合 - 「選択・検索」ボタンのクラスをトグルする\n  function checkboxCallback() {\n    console.log(this)\n    const obj = this\n    const status = obj.checker.getStatus()\n    const formId = obj.formId\n\n    switch (formId) {\n      // 沿線の選択の場合 - 選択・検索ボタンのクラスをトグル\n      case form_ensen_step_one_id:\n        const el = document.querySelector(`#${btn_search_id}`)\n        toggleBtnClass(el, status)\n      //それ以外の場合\n      default:\n        break;\n    }\n  }\n\n  // チェックボックスのステータスチェック\n  const checkboxStatus = () => {\n    if (checkboxes.length === 0) return\n    checkboxes.forEach(obj => {\n      const cb = checkboxCallback.bind(obj)\n      obj.elements.forEach(checkbox => {\n        checkbox.addEventListener('change', cb)\n      })\n      // １つだけ取り出して、初期チェックを走らせる\n      obj.elements[0].dispatchEvent(new Event('change'))\n    })\n  }\n\n  // チェックボックスの取得\n  const getCheckboxes = (forms) => {\n\n    forms.forEach(form => {\n      const id = form.id\n      let _checkboxes\n\n      try {\n        if (!id) {\n          throw new Error('Please provide form id')\n        }\n        // そもそもチェックボックスの確認対象のフォームかどうか調べる\n        if (!form_ensen_steps_id.includes(id)) {\n          throw new Error('This form is not set for checkbox checks')\n        }\n        // チェックボックス取得 - 対象のものだけ\n        _checkboxes = form.querySelectorAll('input[type=checkbox][data-js-checkbox-target]')\n        if (_checkboxes.length === 0) {\n          throw new Error('Target checkbox does not exist.')\n        }\n      } catch (err) {\n        console.log(err.message)\n        return\n      }\n\n      checkboxes.push({\n        formId: id,\n        checker: new RF_GLOBALS.RfCheckboxStatus(form, _checkboxes),\n        elements: _checkboxes,\n      })\n\n    })\n\n    checkboxStatus()\n\n  }\n\n\n\n\n  const init = () => {\n    getCheckboxes(forms)\n  }\n\n  init()\n\n}\n\nexport default rf_search_ensen_checkbox","// 検索 - エリアのチェックボックス制御\n\nimport RfCheckBoxCombo from \"./_checkbox-combo\"\n\nconst rf_search_area_checkbox = () => {\n  // const forms = document.querySelectorAll('[data-js-form-search-area-checkbox]')\n  const forms = document.querySelectorAll('[data-js-form-search-area-checkbox]')\n  const form_search_area_id = 'sys-form'\n  const form_search_area_ids = [\n    form_search_area_id,\n  ]\n  // const btn_search_id = 'form-ensen-submit'\n  // const checkbox_group_name = 'data-js-checkboox-combo-group'\n  const checkbox_target_name = 'data-js-checkbox-combo-target'\n  const btn_disabled_class = '--is-disabled'\n  let checkboxes = []\n\n\n  // チェックボックスコンボフォームを取得する\n  const getCheckboxCombo = () => {\n    forms.forEach(form => {\n      const id = form.id\n      let _checkboxes\n\n      try {\n        if (!id) {\n          throw new Error('Please provide form id')\n        }\n        // そもそもチェックボックスの確認対象のフォームかどうか調べる\n        if (!form_search_area_ids.includes(id)) {\n          throw new Error('This form is not set for checkbox checks')\n        }\n        // チェックボックス取得 - 対象のものだけ\n        _checkboxes = form.querySelectorAll(`input[type=checkbox][${checkbox_target_name}]`)\n        if (_checkboxes.length === 0) {\n          throw new Error('Target checkbox does not exist.')\n        }\n      } catch (err) {\n        console.log(err.message)\n        return\n      }\n\n      new RF_GLOBALS.RfCheckBoxCombo(form)\n\n    })\n  }\n\n\n  const init = () => {\n    getCheckboxCombo(forms)\n  }\n\n  init()\n}\n\nexport default rf_search_area_checkbox;","class RfMediaQuery {\n  #cb\n  #event\n  #minWidth = 768\n  #query = matchMedia(`(min-width: ${this.#minWidth}px)`);\n\n  constructor(cb, event, minWidth = this.#minWidth) {\n    this.#cb = cb\n    this.#event = event\n    this.#minWidth = minWidth\n    this.#query = matchMedia(`(min-width: ${minWidth}px)`)\n    this.#attachListener()\n  }\n\n  #attachListener() {\n    console.log('media query function: ', this.#cb)\n    this.#query.addEventListener(this.#event, this.#cb)\n    this.#query.dispatchEvent(new Event(this.#event)) //初回限定\n  }\n}\n\nexport default RfMediaQuery","// 検索方法・選び方の変更のtippy展開\nconst rf_search_change_method = () => {\n  const btn = document.querySelector('[data-js-search-change-method]')\n  let tippyInstance\n  const tippyFunc = (ref) => {\n    const id = ref.dataset.jsSearchMethod\n    const el = document.querySelector(id)\n    return document.querySelector(id)\n  }\n\n  const tippySettingCommon = {\n    content: tippyFunc,\n    animation: 'shift-away',\n    interactive: true,\n    interactiveBorder: 10,\n    trigger: 'click',\n    delay: [null, 300],\n    arrow: tippy.roundArrow,\n    theme: 'rf',\n  }\n  const tippySettingSP = {\n    placement: 'bottom',\n  }\n  const tippySettingPC = {\n    placement: 'right',\n  }\n\n  // メディアクエリのブレイクポイントでtippyの設定を変更する\n  const change_tippy_setting = event => {\n    console.log('media event', event)\n    const is_matched = event.matches || event.currentTarget.matches\n    console.log('is_matched: ', is_matched)\n    let tippySetting\n    if (is_matched) {\n      console.log('tippy PC')\n      tippySetting = {\n        // ...tippySettingCommon,\n        ...tippySettingPC\n      }\n    } else {\n      console.log('tippy SP')\n      tippySetting = {\n        // ...tippySettingCommon,\n        ...tippySettingSP\n      }\n    }\n    tippyInstance.setProps(tippySetting)\n  }\n\n  const set_tippy = () => {\n    console.log('tippy init')\n    let tippySetting\n    if (RF_GLOBALS.RF_CONFIG['window_state'] === 'PC') {\n      tippySetting = {\n        ...tippySettingCommon,\n        ...tippySettingPC\n      }\n    } else if (RF_GLOBALS.RF_CONFIG['window_state'] === 'SP') {\n      tippySetting = {\n        ...tippySettingCommon,\n        ...tippySettingSP\n      }\n    }\n\n    console.log('tippy setting: ', tippySetting)\n    tippyInstance = tippy(btn, tippySetting)\n  }\n\n  const init = () => {\n    set_tippy()\n    new RF_GLOBALS.RfMediaQuery(change_tippy_setting, 'change')\n  }\n\n  init()\n}\n\nexport default rf_search_change_method","// フェイクAJAX通信whatever..\nconst rf_wait = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('wait')\n    }, 2000)\n  })\n}\n\n// モーダル処理\nconst rf_test = () => {\n\n  // モーダルを開くボタン取得\n  const modalOpenBtn = document.querySelector('#ajax-modal-test')\n\n  // モーダルを開く処理\n  modalOpenBtn.addEventListener('click', async (e) => {    \n    e.preventDefault()\n\n    // ロード中はクリック無効化\n    if(e.target.classList.contains('--is-loading')) return\n\n    // ボタンをロード中にdisabled\n    e.target.classList.add('--is-loading')\n\n    // ローダーを挿入(画面中央に配置するスタイルを指定)\n    const loader = new RF_GLOBALS.RfLoader({\n      style: '--bg-black --fixed-center',\n    })\n\n    // 2秒待つ(フェイクAJAX通信)\n    const res = await rf_wait()\n    console.log(res)\n\n    // ローダーを削除\n    loader.removeLoader()\n\n    // ボタンからローディングクラスを削除\n    e.target.classList.remove('--is-loading')\n\n    // モーダルを開く\n    RF_GLOBALS.rf_modals.openModal('#sys-dialog-area')\n\n  })\n\n}\n\nexport default rf_test","// Vendors\nimport Toastify from 'toastify-js'\n\n// import { rf_get_globals, rf_set_globals } from \"./partials/_global-setting\";\nimport rf_responsive_check from \"./partials/_responsive\";\nimport RfLoader from \"./partials/_loader\";\nimport RfCheckboxStatus from \"./partials/_checkbox-status\";\nimport RfCheckBoxCombo from \"./partials/_checkbox-combo\";\n// import rf_modals from \"./partials/_modal.old\";\nimport RfModals from \"./partials/_modal\";\nimport rf_modal_madori from \"./partials/_modal-madori\";\nimport rf_modal_usage from \"./partials/_modal-usage\";\nimport rf_gnav from \"./partials/_gnav\";\nimport rf_toggles from \"./partials/_toggles\";\nimport rf_top_banners from \"./partials/_top-banners\";\nimport rf_todays_count from \"./partials/_top-today\";\nimport rf_prop_slider from \"./partials/_prop-slider\";\nimport { rf_room_list_link, rf_room_list_toggle } from \"./partials/_room-list\";\nimport { RFBuildroomSlide, rf_buildroom_main_slide, rf_buildroom_related_slide } from \"./partials/_buildroom\";\nimport rf_cta_navi_tel from \"./partials/_cta-navi\";\nimport rf_select_link from \"./partials/_select-link\";\nimport rf_related_prop_slider from \"./partials/_related-prop-slider\";\nimport rf_ward from \"./partials/_ward\";\nimport rf_result_room_slide from \"./partials/_result-room-slide\";\nimport rf_search_ensen_checkbox from \"./partials/_search-enesen\";\nimport rf_search_area_checkbox from \"./partials/_search-area\";\nimport RfMediaQuery from \"./partials/_mediaquery\";\nimport rf_search_change_method from \"./partials/_search-change-method\";\nimport pagetop from \"./partials/_pagetop\";\n\nimport rf_test from \"./partials/_test\";\n\n// =======================================================\n// Inits\nconst rf_init = () => {\n\n  // Viewport checker (SP or PC)\n  rf_responsive_check()\n\n  // グローバル変数、関数、はRF_GLOBALSにまとめ、windowにアサインする\n  window['RF_GLOBALS'] = {\n    ...window['RF_GLOBALS'],\n    RfLoader,\n    RfCheckboxStatus,\n    RfCheckBoxCombo,\n    RfMediaQuery,\n    RfModals,\n    rf_modal_madori,\n  }\n\n  // rf_set_globals({\n  //   window_state: 'PC',\n  //   breakpoint: 768,\n  // })\n\n\n  console.log(window['RF_GLOBALS'])\n\n\n  // Global Navigation\n  if (document.querySelector('[data-js-gnav]')) {\n    rf_gnav()\n  }\n\n  // Toggles\n  if (document.querySelector('[data-js-toggle]')) {\n    rf_toggles()\n  }\n\n  // Pagetop\n  if(document.querySelector('[data-js-pagetop]')) {\n    pagetop()\n  }\n\n  // TOPページ - 本日掲載\n  if (document.querySelector('[data-js-today-target]')) {\n    rf_todays_count()\n  }\n\n  // Topページ - バナー\n  if (document.querySelector('[data-js-top-banners]')) {\n    console.log('top slider')\n    rf_top_banners()\n  }\n\n  // 物件スライダー(TOPページ)\n  if (document.querySelector('[data-js-prop-slider]')) {\n    rf_prop_slider()\n  }\n\n  // 物件スライダー(関連）\n  if (document.querySelector('[data-js-related-prop-slider]')) {\n    rf_related_prop_slider()\n  }\n\n  // お部屋リストリンク\n  if (document.querySelector('[data-js-room-link]')) {\n    rf_room_list_link()\n    rf_room_list_toggle()\n  }\n\n  // 建物・部屋共通\n  // NEW\n  let RFtemp\n  if (document.querySelector('[data-js-buildroom-slide]')) {\n    RFtemp = new RFBuildroomSlide()\n    console.dir(RFtemp)\n  }\n\n  // 👇️ OLD\n  // if (document.querySelector('[data-js-buildroom-mv]')) {\n  //   rf_buildroom_main_slide()\n  // }\n  // if (document.querySelector('[data-js-buildroom-mv-thumbs]')) {\n  //   rf_buildroom_related_slide()\n  // }\n  //=====\n\n  // モーダル\n  if (\n    document.querySelector('[data-js-modal]') || //ボタン\n    document.querySelector('[data-js-modal-target]') //モーダル本体\n  ) {\n    RF_GLOBALS.rf_modals = new RF_GLOBALS.RfModals();\n  }\n\n  // CTAナビ\n  if (document.querySelector('[data-js-cta-navi-tel]')) {\n    rf_cta_navi_tel()\n  }\n\n  // セレクトリンク\n  if (document.querySelector('[data-js-select-link]')) {\n    rf_select_link()\n  }\n\n  // 区の選択\n  if (document.querySelector(`[data-js-ward-select]`)) {\n    rf_ward()\n  }\n\n  // 検索結果 - お部屋リストスライド\n  if (document.querySelector('[data-js-result-room-slide]')) {\n    rf_result_room_slide()\n  }\n\n  // 検索 - 駅・沿線チェックボックス\n  if (document.querySelector('[data-js-form-checkbox]')) {\n    rf_search_ensen_checkbox()\n  }\n\n  // 検索 - エリアチェックボックス\n  if (document.querySelector('[data-js-form-search-area-checkbox]')) {\n    rf_search_area_checkbox()\n  }\n\n\n  // 検索の方法、選び方の変更\n  if (document.querySelector('[data-js-search-change-method]')) {\n    rf_search_change_method()\n  }\n\n  // TODO: テスト(本番化のときに削除)\n  if(document.querySelector('#ajax-modal-test')) {\n    rf_test()\n  }\n\n  // 間取りモーダル\n  if(\n    document.querySelector('[data-js-madori-modal]') \n  ) {\n    rf_modal_madori()\n  }\n\n  // 便利な使い方モーダル\n  // 2025-02-10 一旦非表示\n  // if( document.querySelector('#modal-convenient-usage')) {\n  //   rf_modal_usage()\n  // }\n}\n\nrf_init()","import { rf_get_globals, rf_set_globals, init_rf_globals } from './_global-setting'\n\nconst rf_responsive_check = () => {\n  window.addEventListener('resize', () => {\n    requestAnimationFrame(() => {\n      let current_state = rf_get_globals('window_state')\n\n      if (window.innerWidth < rf_get_globals('breakpoint') && current_state === 'PC') {\n        rf_set_globals({\n          window_state: 'SP',\n        })\n        console.log('set to SP')\n      } else if (window.innerWidth >= rf_get_globals('breakpoint') && current_state === 'SP') {\n        rf_set_globals({\n          window_state: 'PC',\n        })\n        console.log('set to PC')\n      }\n    })\n\n  })\n\n  // 初動\n  window.dispatchEvent(new Event('resize'))\n}\n\nexport default rf_responsive_check","import { rf_get_globals } from './_global-setting'\n\nconst rf_gnav = () => {\n  let _isOpen = false //グローバルナビゲーションの開閉状態\n  let _isOpenSub = false // PC用 - のLv2のナビゲーションの開閉状態\n  let _current = null // 現在開いているLv1のID\n  let _currentSub = null // PC用 - 現在開いているLv2のID\n  const gnavID = 'gnav-main'\n  const openClass = '--is-open'\n  const lv1Flag = 'jsGnavLv1' // Lv1のナビゲーションのフラグ(dataset名)\n  // const gnavBtnPC = document.querySelectorAll('[data-js-gnav-pc]')\n  const gnav = document.querySelector(`#${gnavID}`) //グローバルナビゲーション本体\n  const gnavBtn = document.querySelector('#gnav-btn-open')\n  const gnavBtnClose = document.querySelector('[data-js-gnav-close]')\n  const gnavSubContainer = document.querySelector('#gnav-sub-container')\n  const gnavBtnSubContClose = document.querySelector('[data-js-gnav-sub-container-close]')\n  const gnavToggles = document.querySelectorAll('[data-js-gnav-sub]')\n  const gnavToggleTargets = Array.from(gnavToggles).map(toggle => document.querySelector(toggle.dataset.jsGnavSub))\n  const gnavClose = document.querySelectorAll(['[data-js-gnav-sub-close]'])\n\n  // Gnavを閉じる + すべてを閉じる\n  const _hideGnav = () => {\n    _isOpen = false\n    gnav.classList.remove(openClass)\n\n    // PC サブコンテナを閉じる\n    _isOpenSub = false\n    _current = null\n    _currentSub = null\n    gnavSubContainer.classList.remove(openClass)\n\n\n    // openClassを全て削除\n    gnavToggles.forEach(target => {\n      target.classList.remove(openClass)\n    })\n    gnavToggleTargets.forEach(target => {\n      target.classList.remove(openClass)\n    })\n\n  }\n\n  // Gnavを開く\n  const _showGnav = () => {\n    _isOpen = true\n    gnav.classList.add(openClass)\n  }\n\n  // SP - Gnav(自体)をタップしたら閉じる\n  gnav.addEventListener('click', e => {\n    const target = e.target\n    // console.log(target.id)\n    if (target.id !== gnavID) return\n    _hideGnav()\n  })\n\n  // SP - Gnavを閉じるボタン\n  gnavBtnClose.addEventListener('click', e => {\n    _hideGnav()\n  })\n\n  // SP - Gnav🍔\n  gnavBtn.addEventListener('click', e => {\n    if (_isOpen && gnav.classList.contains(openClass)) {\n      _hideGnav()\n    } else {\n      _showGnav()\n    }\n  })\n\n  // Gnav Toggles\n  gnavToggles.forEach(toggle => {\n    toggle.addEventListener('click', e => {\n      console.log('クリック前のLv2: ', _currentSub)\n      const targetID = toggle.dataset.jsGnavSub\n\n      // PC - Lv1部分をクリックした場合\n      if (lv1Flag in toggle.dataset && rf_get_globals('window_state') === 'PC') {\n        console.log('PC Lv1 クリック: ', targetID)\n\n        // ▼ サブコンテナ制御\n        // 1. 開いている + 同じ => 閉じる\n        if (_isOpenSub && _currentSub === targetID) {\n          console.log('PC サブコンテナ閉じる')\n          _hideGnav()\n\n          return //処理は中止\n        }\n        // 2. 開いている + 違う => 切り替える（開く）\n        if (_isOpenSub && _currentSub !== targetID) {\n          console.log('PC サブコンテナ切り替え')\n\n          // 1つ前のサブコンテナ\n          document.querySelector(_currentSub).classList.remove(openClass)\n        }\n\n        // 3. 開いていない => 開く\n        if (_isOpenSub === false) {\n          _showGnav() // Gnavを開く(SP用だけど一応実行)\n          gnavSubContainer.classList.add(openClass) //サブコンテナを開く\n          _isOpenSub = true\n        }\n      }\n\n      _currentSub = targetID\n\n      console.log('クリック後のLv2: ', _currentSub)\n      console.log(_isOpenSub)\n\n      // SP - Lv1部分をクリックした場合でも一応サブコンテナを開く\n      if (\n        lv1Flag in toggle.dataset &&\n        _isOpenSub !== true &&\n        rf_get_globals('window_state') === 'SP'\n      ) {\n        gnavSubContainer.classList.add(openClass) //サブコンテナを開く\n        _isOpenSub = true\n      }\n\n      // PC & SP - ターゲットのopenClassをトグル\n      document.querySelector(targetID).classList.add(openClass)\n\n      // PC & SP - Lv1を更新\n      if (lv1Flag in toggle.dataset) {\n        // 1つ前のLv1リンクからopenClassを削除し、新しいものへ追加\n        const _prev = document.querySelector(`[data-js-gnav-lv1=${_current}]`)\n        console.log('1つ前のLv1', _prev)\n        if (_prev) {\n          _prev.classList.remove(openClass)\n        }\n\n        _current = toggle.dataset[lv1Flag]\n        console.log('保存したLv1', _current)\n        toggle.classList.add(openClass)\n      }\n    })\n  })\n\n  // PC - サブコンテナを閉じる\n  gnavBtnSubContClose.addEventListener('click', () => {\n    _hideGnav()\n  })\n\n  // SP - サブナビゲーションを閉じる\n  gnavClose.forEach(close => {\n    close.addEventListener('click', () => {\n      const target = document.querySelector(close.dataset.jsGnavSubClose)\n      if (target.classList.contains(openClass)) target.classList.remove(openClass)\n    })\n  })\n\n\n}\n\nexport default rf_gnav","// ページトップへ戻る\nconst pagetop = () => {\n\n  const pagetop = document.querySelector('[data-js-pagetop]')\n  const fps = 10\n  const threshold = 500\n  let prevRenderTime\n\n  // クリックイベント\n  pagetop.addEventListener('click', () => {\n    window.scrollTo({top: 0, behavior: 'smooth'})\n  })\n\n  // 表示非表示\n  const toggleVisibility = (timestamp) => {\n    if (!prevRenderTime) {\n      prevRenderTime = timestamp - 1000/fps\n    }\n    if (timestamp >= prevRenderTime + 1000/fps) {\n      pagetop.classList.toggle('--is-show', window.scrollY >= threshold)\n      prevRenderTime = timestamp\n    }\n    \n    requestAnimationFrame(toggleVisibility)\n  }\n\n  const init = () => {\n    requestAnimationFrame(toggleVisibility)  \n  }\n  \n  init()\n\n}\n\nexport default pagetop","// お部屋リスト\nimport { rf_get_globals, rf_set_globals } from './_global-setting'\n\n\n// 部屋リストリンク\nconst rf_room_list_link = () => {\n  const links = document.querySelectorAll('[data-js-room-link]')\n\n  links.forEach(link => {\n    link.addEventListener('click', e => {\n      e.stopPropagation()\n      const clicked = e.target\n\n      if (\n        clicked.tagName === 'A' ||\n        clicked.tagName === 'BUTTON' ||\n        clicked.hasAttribute('data-js-madori-modal') || //間取り画像の場合\n        clicked.closest('.swiper-initialized') //動いているswiperは中止対象\n      ) {\n        console.log('インタラクティブ要素or間取り画像なので中止')\n        return\n      }\n\n      const target = link.dataset.jsRoomLink\n      window.open(target, '_blank')\n    })\n  })\n}\n\n// お部屋リストの制御\nconst rf_room_list_toggle = () => {\n  const openClass = '--is-open'\n  let tempText = ''\n  const maxHeightPC = 660\n  const maxHeightSP = 1200\n  const toggles = document.querySelectorAll('[data-js-room-toggle]')\n\n\n  // トグルボタンのコントロール, 画像の読み込みなどを考慮してwindowロード後\n  window.addEventListener('load', () => {\n    toggles.forEach(toggle => {\n      const target = document.querySelector(toggle.dataset.jsRoomToggle)\n\n      // トグルボタンの表示・非表示をまず決める（デフォルト: 表示）\n      if (rf_get_globals('window_state') === 'PC' && target.scrollHeight < maxHeightPC) {\n        toggle.classList.add('--is-hide')\n      } else if (rf_get_globals('window_state') === 'SP' && target.scrollHeight < maxHeightSP) {\n        toggle.classList.add('--is-hide')\n      }\n\n      // クリックコントロール\n      toggle.addEventListener('click', () => {\n\n        target.classList.toggle(openClass)\n        toggle.classList.toggle(openClass)\n\n        // 高さ\n        if (target.classList.contains(openClass)) {\n          target.style.maxHeight = target.scrollHeight + 'px'\n        } else {\n          target.style.maxHeight = null\n        }\n\n\n        // テキスト\n        if ('jsRoomToggleText' in toggle.dataset) {\n          tempText = toggle.textContent\n          toggle.textContent = toggle.dataset.jsRoomToggleText\n          toggle.dataset.jsRoomToggleText = tempText\n        }\n      })\n    })\n  })\n\n}\n\nexport { rf_room_list_link, rf_room_list_toggle }","const rf_select_link = () => {\n\n  const selectLinks = document.querySelectorAll('[data-js-select-link]')\n\n  selectLinks.forEach(link => {\n    link.addEventListener('change', e => {\n      const href = e.target.selectedOptions[0].value\n      location.href = href\n    })\n  })\n}\n\nexport default rf_select_link"],"mappings":"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","ignoreList":[]}