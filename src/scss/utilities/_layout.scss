// LAYOUT
@use "../abstracts/mixins" as *;

// =======================================================
// Flexbox
.u-align-items {
  $positions: start, end, center, baseline, stretch;
  @each $pos in $positions {
    &-#{$pos} {
      $value: #{$pos}; //初期値
      @if $pos == start {
        $value: flex-start;
      }
      @if $pos == end {
        $value: flex-end;
      }

      align-items: #{$value} !important;
    }
  }

  @include mq {
    @each $pos in $positions {
      &-pc-#{$pos} {
        $value: #{$pos}; //初期値
        @if $pos == start {
          $value: flex-start;
        }
        @if $pos == end {
          $value: flex-end;
        }

        align-items: #{$pos} !important;
      }
    }
  }
}

.u-justify-content {
  $positions: start, end, center, between, around, evenly;
  @each $pos in $positions {
    &-#{$pos} {
      $value: #{$pos};
      @if $pos == start {
        $value: flex-start;
      }
      @if $pos == end {
        $value: flex-end;
      }
      @if $pos == center {
        $value: center;
      }
      @if $pos == between {
        $value: space-between;
      }
      @if $pos == around {
        $value: space-around;
      }
      @if $pos == evenly {
        $value: space-evenly;
      }

      // display: flex !important;
      justify-content: #{$value} !important;
    }
  }

  @include mq {
    @each $pos in $positions {
      &-pc-#{$pos} {
        $value: #{$pos};
        @if $pos == start {
          $value: flex-start;
        }
        @if $pos == end {
          $value: flex-end;
        }
        @if $pos == center {
          $value: center;
        }
        @if $pos == between {
          $value: space-between;
        }
        @if $pos == around {
          $value: space-around;
        }
        @if $pos == evenly {
          $value: space-evenly;
        }

        display: flex !important;
        justify-content: #{$value} !important;
      }
    }
  }
}
