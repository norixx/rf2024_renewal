// スペーシング
@use "../abstracts/mixins" as *;

@mixin spacing($direction, $space, $type, $breakpoint: "") {
  @if $breakpoint != "" {
    $breakpoint: #{$breakpoint}-;
  }
  @if $direction == all {
    @if $type == m {
      &-#{$type}-#{$breakpoint}#{$space} {
        margin: var(--space-#{$space}) !important;
      }
    }
    @if $type == p {
      &-#{$type}-#{$breakpoint}#{$space} {
        padding: var(--space-#{$space}) !important;
      }
    }
  }
  @if $direction == t {
    @if $type == m {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        margin-top: var(--space-#{$space}) !important;
      }
    }
    @if $type == p {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        padding-top: var(--space-#{$space}) !important;
      }
    }
  }

  @if $direction == r {
    @if $type == m {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        margin-right: var(--space-#{$space}) !important;
      }
    }
    @if $type == p {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        padding-right: var(--space-#{$space}) !important;
      }
    }
  }

  @if $direction == b {
    @if $type == m {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        margin-bottom: var(--space-#{$space}) !important;
      }
    }
    @if $type == p {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        padding-bottom: var(--space-#{$space}) !important;
      }
    }
  }

  @if $direction == l {
    @if $type == m {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        margin-left: var(--space-#{$space}) !important;
      }
    }
    @if $type == p {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        padding-left: var(--space-#{$space}) !important;
      }
    }
  }

  @if $direction == x {
    @if $type == m {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        margin-left: var(--space-#{$space}) !important;
        margin-right: var(--space-#{$space}) !important;
      }
    }
    @if $type == p {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        padding-left: var(--space-#{$space}) !important;
        padding-right: var(--space-#{$space}) !important;
      }
    }
  }

  @if $direction == y {
    @if $type == m {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        margin-top: var(--space-#{$space}) !important;
        margin-bottom: var(--space-#{$space}) !important;
      }
    }
    @if $type == p {
      &-#{$type}#{$direction}-#{$breakpoint}#{$space} {
        padding-top: var(--space-#{$space}) !important;
        padding-bottom: var(--space-#{$space}) !important;
      }
    }
  }
}
.u {
  $types: m, p;
  $spaces: 0, 8, 10, 12, 14, 16, 18, 20, 24, 28, 32, 40, 48, 56, 64, 72, 80;
  $directions: all, t, r, b, l, x, y;

  @each $type in $types {
    @each $space in $spaces {
      @each $direction in $directions {
        @include spacing($direction, $space, $type);
      } // @each $direction
    }
  }

  @include mq {
    @each $type in $types {
      @each $space in $spaces {
        @each $direction in $directions {
          @include spacing($direction, $space, $type, "pc");
        } // @each $direction
      }
    }
  }
}
