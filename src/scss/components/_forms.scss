// フォーム関連
@use "../abstracts/mixins" as *;

::placeholder {
  color: var(--txt-light);
  font-size: var(--fz-14);
}

// ラベル
.c-form-label {
  cursor: pointer;
  font-size: var(--fz-14);
  line-height: var(--line-height-140);
  display: inline-block;

  // チェックボックス
  &.--checkbox,
  &.--radio {
    [type="checkbox"],
    [type="radio"] {
      @include visually-hidden;
    }

    > span {
      display: inline-flex;
      // align-items: center;
      align-items: flex-start;

      // チェックボックス、ラジオボタン用スペース
      &::before {
        content: "";
        width: 20px;
        height: 20px;
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center center;
        margin-right: var(--space-8);
        flex: 0 0 20px;
      }
    }

    // 数値
    .__count {
      margin-left: var(--space-8);
    }
  }

  &.--checkbox > span::before {
    background-image: var(--icon-checkbox);
  }
  &.--checkbox:hover > span::before {
    background-image: var(--icon-checkbox--on);
  }
  &.--checkbox input:checked ~ span::before {
    background-image: var(--icon-checkbox--checked);
  }

  &.--radio > span::before {
    background-image: var(--icon-radio);
  }
  &.--radio:hover > span::before {
    background-image: var(--icon-radio--on);
  }
  &.--radio input:checked ~ span::before {
    background-image: var(--icon-radio--checked);
  }

  // セレクト
  &.--select {
    position: relative;
    display: inline-block;
    height: 32px; //基本サイズ

    &::before,
    &::after {
      content: "";
      pointer-events: none;
      position: absolute;
      min-width: 32px;
    }
    &::before {
      height: 100%;
      background-color: var(--bg-white);
      mask: var(--icon-arrow-down) no-repeat center center / 24px 24px;
      right: 0;
      top: 0;
      z-index: 1;
    }

    &::after {
      right: 0;
      top: 0;
      height: 100%;
      border-radius: 0 var(--bdr-radius-md) var(--bdr-radius-md) 0;
      background-color: var(--bg-gray-dark);
      transition: background var(--animation-normal);
    }

    &:hover::after {
      background-color: var(--bg-black);
    }

    // サイズ - before:アイコン, after: アイコンベース
    $sizes: xs, sm, md, lg;
    @each $size in $sizes {
      &.--select-#{$size} {
        @if ($size == xs) {
          height: 24px;
          &::before {
            min-width: 24px;
            mask-size: 16px 16px;
          }
          &::after {
            min-width: 24px;
          }
        }
        @if ($size == sm) {
          height: 24px;
          &::before {
            min-width: 24px;
            mask-size: 16px 16px;
          }
          &::after {
            min-width: 24px;
          }
        }
        @if ($size == md) {
          height: 32px;
          &::before {
            min-width: 32px;
          }
          &::after {
            min-width: 32px;
          }
        }
        @if ($size == lg) {
          height: 40px;
          &::before {
            min-width: 32px;
          }
          &::after {
            min-width: 40px;
          }
        }
      }

      @include mq {
        &.--select-pc-#{$size} {
          @if ($size == xs) {
            height: 24px;
            &::before {
              min-width: 24px;
              mask-size: 16px 16px;
            }
            &::after {
              min-width: 24px;
            }
          }
          @if ($size == sm) {
            height: 24px;
            &::before {
              min-width: 24px;
              mask-size: 16px 16px;
            }
            &::after {
              min-width: 24px;
            }
          }
          @if ($size == md) {
            min-height: 32px;
            &::before {
              min-width: 32px;
              mask-size: 24px 24px;
            }
            &::after {
              min-width: 32px;
            }
          }
          @if ($size == lg) {
            height: 40px;
            &::before {
              min-width: 32px;
              mask-size: 24px 24px;
            }
            &::after {
              min-width: 40px;
            }
          }
        }
      }
    } //@each
    // /サイズ

    // 幅
    &.--w-max {
      width: 100%;
    }
    @include mq {
      &.--w-pc-max {
        width: 100%;
      }
    }
  }
}

// テキスト系
.c-input-text {
  border: 1px solid var(--bdr-normal);
  background-color: var(--bg-white);
  font-size: var(--fz-14);
  line-height: var(--line-height-sm);
  padding: var(--space-16);
  border-radius: var(--bdr-radius-sm);
  transition: var(--animation-normal);

  &:focus {
    border-color: var(--bdr-black);
    outline: var(--outline-form);
  }

  $sizes: 100;
  @each $size in $sizes {
    @if $size == 100 {
      &.--w-#{$size} {
        width: 100%;
      }

      @include mq {
        &.--w-pc-#{$size} {
          width: 100%;
        }
      }
    }
  }
}

// セレクトボックス
.c-input-select {
  border: 1px solid var(--bdr-form);
  // min-height: 32px; //基本サイズ
  width: 100%;
  height: 100%;
  padding-left: var(--space-8);
  --padding-base: var(--space-32);
  padding-right: calc(var(--padding-base) + var(--space-8));
  border-radius: var(--bdr-radius-md);
  background-color: var(--bg-white);
  transition: var(--animation-normal);
  font-size: var(--fz-14);
  position: relative;
  color: var(--txt-normal);
  cursor: pointer;
  appearance: none;

  &:focus {
    border: 1px solid var(--bdr-form--hover);
    outline: 2px solid rgba(0 0 0 / 0.2);
  }

  // サイズ - 親の c-form-labelの大きさに準ずる
  $sizes: xs, sm, md, lg;
  $parent: ".c-form-label";
  @each $size in $sizes {
    #{$parent}.--select-#{$size} & {
      @if ($size == xs) {
        // min-height: 24px;
        font-size: var(--fz-12);
        --padding-base: var(--space-24);
      }
      @if ($size == sm) {
        // min-height: 24px;
        font-size: var(--fz-12);
        --padding-base: var(--space-24);
      }
      @if ($size == md) {
        // min-height: 32px;
        --padding-base: var(--space-32);
      }
      @if ($size == lg) {
        // min-height: 40px;
        --padding-base: var(--space-40);
      }
    }

    @include mq {
      #{$parent}.--select-pc-#{$size} & {
        @if ($size == xs) {
          // min-height: 24px;
          font-size: var(--fz-12);
          --padding-base: var(--space-24);
        }
        @if ($size == sm) {
          // min-height: 24px;
          font-size: var(--fz-12);
          --padding-base: var(--space-24);
        }
        @if ($size == md) {
          // min-height: 32px;
          --padding-base: var(--space-32);
        }
        @if ($size == lg) {
          // min-height: 40px;
          --padding-base: var(--space-40);
        }
      }
    }
  }

  // 昇順、降順
  option.asc,
  option.desc {
    &::after {
      margin-left: var(--space-4);
    }
  }
  option.asc::after {
    content: "↑";
  }
  option.desc::after {
    content: "↓";
  }
} //c-input-select

// 検索
.c-input-label-search {
  border: 1px solid var(--bdr-normal);
  border-radius: var(--bdr-radius-md);
  display: inline-flex;
  align-items: center;
  background: var(--bg-gray-xlight);
  padding-right: var(--space-8);
  transition: var(--animation-normal);

  @include mq {
    background: var(--bg-white);
    padding-right: var(--space-16);
  }

  &.--w-100 {
    width: 100%;
  }

  &:has(input:focus),
  &:has(input:focus-visible) {
    border: 1px solid var(--bdr-black);
  }

  [type="text"],
  [type="search"],
  [type="url"],
  [type="tel"],
  [type="number"] {
    border: none;
    background: transparent;

    &:focus {
      outline: none;
    }
  }
}

// ラベルリンク（エリア検索などで利用）
.c-input-label-combo {
  display: block;
  line-height: var(--line-height-md);
  font-size: var(--fz-14);
  min-height: 64px;
  cursor: pointer;
  position: relative;

  &.--sm {
    min-height: var(--space-32);
  }

  [type="checkbox"],
  [type="radio"] {
    @include visually-hidden;
  }
  > span {
    display: flex;
    align-items: center;
    height: 100%;
    border: 1px solid var(--bdr-btn-gray-xlight);
    border-radius: var(--bdr-radius-md);
    padding: var(--space-16);
    transition: var(--animation-normal);

    &:hover {
      border: 1px solid var(--bdr-btn-gray-dark);
    }

    &::before {
      content: "";
      --icon-size: 24px;
      width: var(--icon-size);
      height: var(--icon-size);
      margin-right: var(--space-16);
      background-repeat: no-repeat;
      background-position: center center;
      background-size: contain;
    }
  }

  &.--sm > span {
    padding: var(--space-10);

    &::before {
      --icon-size: 16px;
      margin-right: var(--space-10);
    }
  }

  // checkbox
  &.--checkbox > input:checked ~ span {
    border: 1px solid var(--bdr-btn-gray--checked);
    background-color: var(--bg-gray-xxlight);
  }
  &.--checkbox > span::before {
    background-image: var(--icon-checkbox);
  }
  &.--checkbox:hover > span::before {
    background-image: var(--icon-checkbox--on);
  }
  &.--checkbox > input:checked ~ span::before {
    background-image: var(--icon-checkbox--checked);
  }
  // radio
  &.--radio > span::before {
    background: var(--icon-radio) no-repeat center center;
  }
  &.--radio:hover::before {
    background-image: var(--icon-radio--on);
  }
  .c-input-checkradio:checked ~ &.--radio::before {
    background-image: var(--icon-radio--checked);
  }

  .__link {
    a {
      text-decoration: underline;
    }
  }

  .__count {
    flex: 1 0 35%;
    font-size: var(--fz-12);
    margin-left: auto;
    color: var(--txt-light);
    text-align: end;
  }
}

// Others
.c-form-select-range {
  display: flex;
  align-items: center;
  gap: var(--space-8);

  &.--w-max .c-form-label {
    flex: 1;
  }
}
